{
	"$schema": "https://json-schema.org/draft-07/schema",
	"$id": "https://os.ratrig.com/board-definition.schema.json",
	"title": "Control Board",
	"description": "A 3d printer control board",
	"type": "object",
	"additionalProperties": false,
	"properties": {
		"$schema": { "type": "string" },
		"id": {
			"description": "The path for serial communication with this MCU",
			"type": "string"
		},
		"name": {
			"description": "The name of the control board",
			"type": "string"
		},
		"manufacturer": {
			"description": "The name of the manufacturer of this board",
			"type": "string"
		},
		"firmwareBinaryName": {
			"description": "The firmware binary filename in RatOS",
			"type": "string"
		},
		"compileScript": {
			"description": "The path to the compilation script if the board supports automatic firmware compilation, relative to the board definition directory",
			"type": "string"
		},
		"flashScript": {
			"description": "The path to the flashing script if the board supports automatic firmware flashing, relative to the board definition directory",
			"type": "string"
		},
		"flashInstructions": {
			"description": "Instructions for how to make sure the board can be automatically flashed",
			"type": "string"
		},
		"documentationLink": {
			"description": "Link to the RatOS configuration for this board",
			"type": "string"
		},
		"isToolboard": {
			"description": "Whether this controlboard is a toolboard",
			"type": "boolean"
		},
		"isHost": {
			"description": "Whether this is the host computer RatOS is running on (used for Pi)",
			"type": "boolean"
		},
		"serialPath": {
			"description": "This property is only required for host boards. It is the path to the serial port to use for communication with the host mcu",
			"type": "string"
		},
		"disableAutoFlash": {
			"description": "Whether to disable automatic flashing of this board",
			"type": "boolean"
		},
		"hasQuirksFiles": {
			"description": "Whether this board has a quirks file that needs to be loaded (must be called quirks.cfg and quirks-toolboard.cfg)",
			"type": "boolean"
		},
		"alternativePT1000Resistor": {
			"description": "The value of the resistor used for PT1000 sensors, if different from the default",
			"type": "number"
		},
		"driverCount": {
			"description": "How many drivers this board has",
			"type": "number"
		},
		"hasMcuTempSensor": {
			"description": "Whether this board has an MCU temperature sensor, default is true",
			"type": "boolean"
		},
		"outputPins": {
			"description": "Output pin definitions. Some boards have safety features that require a pin to be pulled high to enable power, such as the SKR2.",
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"name": {
						"description": "The name of the feature",
						"type": "string"
					},
					"pin": {
						"type": "string"
					},
					"value": {
						"type": "number",
						"maximum": 1,
						"minimum": 0
					}
				}
			}
		},
		"motorSlots": {
			"description": "A specification of the motor slots available on this board",
			"type": "object",
			"patternProperties": {
				"^\\S+$": {
					"type": "object",
					"description": "The settings for a motor slot",
					"properties": {
						"title": {
							"type": "string"
						},
						"step_pin": {
							"type": "string"
						},
						"dir_pin": {
							"type": "string"
						},
						"enable_pin": {
							"type": "string"
						},
						"diag_pin": {
							"type": "string"
						},
						"endstop_pin": {
							"type": "string"
						},
						"uart_pin": {
							"type": "string"
						},
						"uart_address": {
							"type": "string"
						},
						"rx_pin": {
							"type": "string"
						},
						"tx_pin": {
							"type": "string"
						},
						"cs_pin": {
							"type": "string"
						},
						"spi_bus": {
							"type": "string"
						},
						"spi_software_mosi_pin": {
							"type": "string"
						},
						"spi_software_miso_pin": {
							"type": "string"
						},
						"spi_software_sclk_pin": {
							"type": "string"
						}
					},
					"additionalProperties": false,
					"required": ["step_pin", "dir_pin", "enable_pin", "title", "uart_pin", "cs_pin"]
				}
			}
		},
		"stepperSPI": {
			"description": "Which settings to use for SPI stepper drivers",
			"type": "object",
			"additionalProperties": false,
			"properties": {
				"software": {
					"description": "Whether to use software SPI",
					"type": "object",
					"additionalProperties": false,
					"required": ["sclk", "mosi", "miso"],
					"properties": {
						"sclk": {
							"description": "The clock pin",
							"type": "string"
						},
						"mosi": {
							"description": "The mosi pin",
							"type": "string"
						},
						"miso": {
							"description": "The miso pin",
							"type": "string"
						}
					}
				},
				"hardware": {
					"description": "Which SPI bus to use if using hardware spi",
					"type": "object",
					"required": ["bus"],
					"additionalProperties": false,
					"properties": {
						"bus": {
							"description": "The SPI bus to use",
							"type": "string"
						}
					}
				}
			}
		},
		"ADXL345SPI": {
			"description": "Which settings to use for the ADXL345 accelerometer",
			"type": "object",
			"additionalProperties": false,
			"properties": {
				"software": {
					"description": "Whether to use software SPI",
					"type": "object",

					"additionalProperties": false,
					"properties": {
						"sclk": {
							"description": "The clock pin",
							"type": "string"
						},
						"mosi": {
							"description": "The mosi pin",
							"type": "string"
						},
						"miso": {
							"description": "The miso pin",
							"type": "string"
						}
					}
				},
				"hardware": {
					"description": "Which SPI bus to use if using hardware spi",
					"type": "object",
					"additionalProperties": false,
					"properties": {
						"bus": {
							"description": "The SPI bus to use",
							"type": "string"
						}
					}
				},
				"cs_pin": {
					"description": "The chip select pin",
					"type": "string"
				}
			}
		},
		"integratedDrivers": {
			"description": "Describes the drivers integrated on this board, if any",
			"type": "object",
			"additionalProperties": false,
			"properties": {
				"x": {
					"description": "The driver for the X axis",
					"type": "string"
				},
				"y": {
					"description": "The driver for the Y axis",
					"type": "string"
				},
				"z": {
					"description": "The driver for the Z axis",
					"type": "string"
				},
				"z1": {
					"description": "The driver for the Z axis",
					"type": "string"
				},
				"z2": {
					"description": "The driver for the Z axis",
					"type": "string"
				},
				"extruder": {
					"description": "The driver for the E axis",
					"type": "string"
				}
			}
		},
		"driverVoltages": {
			"description": "The supported stepper voltages. 24, 36, 48, 56 and 60 is supported. Default is 24 only.",
			"type": "array",
			"items": {
				"type": "number"
			}
		},
		"extruderlessConfig": {
			"description": "The name of an extruderless config (used for 5 driver boards to support 6 driver printers)",
			"type": "string"
		},
		"fourPinFanConnectorCount": {
			"description": "How many 4 pin fan connectors this board has",
			"type": "number"
		},
		"dfu": {
			"description": "DFU Flashing details",
			"type": "object",
			"additionalProperties": false,
			"properties": {
				"dfuBootImage": {
					"description": "Path to a picture for locating the buttons and/or jumpers required to boot into DFU mode",
					"type": "string"
				},
				"flashDevice": {
					"description": "A string containing the vendor and device id to use as the flash target, eg 0483:df11",
					"type": "string"
				},
				"instructions": {
					"description": "Instruction steps for how to boot into DFU mode",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"reminder": {
					"description": "Post-flashing reminders, if any.",
					"type": "string"
				},
				"hasBoot0Jumper": {
					"description": "Whether this board has a boot0 jumper",
					"type": "boolean"
				}
			},
			"required": ["dfuBootImage", "flashDevice", "instructions", "hasBoot0Jumper"]
		},
		"sdFileName": {
			"description": "The filename for the firmware binary when flashing via SD card",
			"type": "string"
		}
	},
	"required": ["id", "name", "manufacturer", "firmwareBinaryName", "compileScript", "documentationLink", "driverCount"]
}
