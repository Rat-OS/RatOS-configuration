# WARNING: DO NOT EDIT THIS FILE
# To override settings from this file, you can copy and paste the relevant
# sections into your printer.cfg and change it there.

[ratos_homing]
axes: xyz
z_hop: 15
z_hop_speed: 15
gcode:
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
		{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
		{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing_x = homing_x if homing_x else homing %}
	{% set homing_y = homing_y if homing_y else homing %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}

	{% if printer["dual_carriage"] is defined %}
		# reset IDEX mode
		{% set default_toolhead = printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}
		{% set parking_position = printer["gcode_macro RatOS"].parking_position %}
		{% set idex_mode = printer["dual_carriage"].carriage_1|lower %}
		IDEX_SINGLE
	{% endif %}

	# Make stowable probe assertion failures cause an emergency stop
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True

	M400                        # Wait for moves to finish
	G90                         # Absolute positioning

    # to simplify development, sensorless homing is completely deactivated for IDEX
    # but technically we can allow it for Y
    # x and y homing has been reversed here, 
	# maybe we can seperate this macro to make it conditional

    # to get a consistent toolhead x-offset we home y before x 
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
		{% if homing_y == 'endstop' %}
			G28 Y
		{% elif homing_y == 'sensorless' %}
            {% if printer["dual_carriage"] is defined %}
				# IDEX 
                { action_emergency_stop("sensorless homing not supported on IDEX!") }
            {% endif %}
			HOME_Y_SENSORLESS
		{% else %}
			{ action_emergency_stop("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
		{% endif %}
		{% set y_homed = True %}
		G0 Y{safe_home_y} F{speed}
	{% endif %}

	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
		{% if homing_x == 'endstop' %}
			G28 X
		{% elif homing_x == 'sensorless' %}
            {% if printer["dual_carriage"] is defined %}
				# IDEX 
                { action_emergency_stop("sensorless homing not supported on IDEX!") }
            {% endif %}
			HOME_X_SENSORLESS
		{% else %}
			{ action_emergency_stop("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
		{% endif %}
		{% if printer["dual_carriage"] is defined %}
			# IDEX 
			# park secondary toolhead in its parking position instead of the endstop position
			SET_DUAL_CARRIAGE CARRIAGE={0 if default_toolhead==1 else 1} MODE=PRIMARY
			G1 X{parking_position[0 if default_toolhead==1 else 1]} F{speed}
			SET_DUAL_CARRIAGE CARRIAGE={default_toolhead} MODE=PRIMARY
		{% endif %}
		{% set x_homed = True %}
		G0 X{safe_home_x} F{speed}
	{% endif %}

	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
		RESPOND MSG="Homing Z"
		{% if x_homed == False or y_homed == False %}
			M118 X and Y must be homed before homing Z
			{ action_emergency_stop("X and Y must be homed before homing Z") }
		{% else %}
			{% if z_probe == "stowable" %}
				DEPLOY_PROBE
				G0 X{safe_home_x} Y{safe_home_y} F{speed}
				G28 Z
				G0 Z{z_hop} F{z_hop_speed}
				STOW_PROBE
			{% else %}
				G0 X{safe_home_x} Y{safe_home_y} F{speed}
				G28 Z
				G0 Z{z_hop} F{z_hop_speed}
			{% endif %}
		{% endif %}
	{% endif %}
	
	# Reset stowable probe stop on error state
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

	{% if printer["dual_carriage"] is defined %}
		# restore IDEX mode
		{% if idex_mode == "copy" %}
			IDEX_COPY
		{% elif idex_mode == "mirror" %}
			IDEX_MIRROR
		{% endif %}
	{% endif %}

[gcode_macro HOME_X_SENSORLESS]
gcode:
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
		{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% endif %}
	# Set homing acceleration (important!)
	M204 S1000
	{% if printer["gcode_macro RatOS"].x_axes is defined %}
		{% for axis in printer["gcode_macro RatOS"].x_axes %}
			{% set stepper = "stepper_" ~ axis|lower %}
			SET_TMC_CURRENT STEPPER={stepper} CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
		{% endfor %}
	{% else %}
		{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
		SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	{% endif %}

	{% if printer["gcode_macro RatOS"].y_axes is defined %}
		{% for axis in printer["gcode_macro RatOS"].y_axes %}
			{% set stepper = "stepper_" ~ axis|lower %}
			SET_TMC_CURRENT STEPPER={stepper} CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
		{% endfor %}
	{% else %}
		{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
		SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_x_current}
	{% endif %}
	# Wait for currents to settle
	G4 P300
	# Home X
	G28 X
	# Restore current
	{% if printer["gcode_macro RatOS"].x_axes is defined %}
		{% for axis in printer["gcode_macro RatOS"].x_axes %}
			{% set stepper = "stepper_" ~ axis|lower %}
			{% set stepper_driver = printer["gcode_macro RatOS"].x_driver_types[loop.index0] ~ " " ~ stepper %}
			SET_TMC_CURRENT STEPPER={stepper} CURRENT={printer.configfile.config[stepper_driver].run_current}
		{% endfor %}
	{% else %}
		{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
		SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	{% endif %}

	{% if printer["gcode_macro RatOS"].y_axes is defined %}
		{% for axis in printer["gcode_macro RatOS"].y_axes %}
			{% set stepper = "stepper_" ~ axis|lower %}
			{% set stepper_driver = printer["gcode_macro RatOS"].y_driver_types[loop.index0] ~ " " ~ stepper %}
			SET_TMC_CURRENT STEPPER={stepper} CURRENT={printer.configfile.config[stepper_driver].run_current}
		{% endfor %}
	{% else %}
		{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
		SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	{% endif %}
	# Wait for currents to settle
	G4 P300
	# Restore acceleration
	M204 S{printer.configfile.config.printer.max_accel} 

[gcode_macro HOME_Y_SENSORLESS]
gcode:
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
		{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% endif %}
	# Set homing acceleration (important!)
	M204 S1000
	{% if printer["gcode_macro RatOS"].x_axes is defined %}
		{% for axis in printer["gcode_macro RatOS"].x_axes %}
			{% set stepper = "stepper_" ~ axis|lower %}
			SET_TMC_CURRENT STEPPER={stepper} CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
		{% endfor %}
	{% else %}
		{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
		SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	{% endif %}

	{% if printer["gcode_macro RatOS"].y_axes is defined %}
		{% for axis in printer["gcode_macro RatOS"].y_axes %}
			{% set stepper = "stepper_" ~ axis|lower %}
			SET_TMC_CURRENT STEPPER={stepper} CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
		{% endfor %}
	{% else %}
		{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
		SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro RatOS"].sensorless_y_current}
	{% endif %}
	# Wait for currents to settle
	G4 P300
	# Home Y
	G28 Y
	# Restore current
	{% if printer["gcode_macro RatOS"].x_axes is defined %}
		{% for axis in printer["gcode_macro RatOS"].x_axes %}
			{% set stepper = "stepper_" ~ axis|lower %}
			{% set stepper_driver = printer["gcode_macro RatOS"].x_driver_types[loop.index0] ~ " " ~ stepper %}
			SET_TMC_CURRENT STEPPER={stepper} CURRENT={printer.configfile.config[stepper_driver].run_current}
		{% endfor %}
	{% else %}
		{% set x_driver = printer["gcode_macro RatOS"].driver_type_x|lower ~ " stepper_x" %}
		SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config[x_driver].run_current}
	{% endif %}

	{% if printer["gcode_macro RatOS"].y_axes is defined %}
		{% for axis in printer["gcode_macro RatOS"].y_axes %}
			{% set stepper = "stepper_" ~ axis|lower %}
			{% set stepper_driver = printer["gcode_macro RatOS"].y_driver_types[loop.index0] ~ " " ~ stepper %}
			SET_TMC_CURRENT STEPPER={stepper} CURRENT={printer.configfile.config[stepper_driver].run_current}
		{% endfor %}
	{% else %}
		{% set y_driver = printer["gcode_macro RatOS"].driver_type_y|lower ~ " stepper_y" %}
		SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config[y_driver].run_current}
	{% endif %}
	# Wait for currents to settle
	G4 P300
	# Restore acceleration
	M204 S{printer.configfile.config.printer.max_accel} 

[gcode_macro MAYBE_HOME]
description: Only home unhomed axis
variable_is_kinematic_position_overriden: False
gcode:
  {% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
    RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
    G28
    SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
  {% else %}
    {% set axes = '' %}
    {% set isHomed = true %}
    {% set axesToHome = '' %}
    {% if params.X is defined %}
      {% set axes = axes ~ 'X ' %}
      {% if 'x' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'X ' %}
      {% endif %}
    {% endif %}
    {% if params.Y is defined %}
      {% set axes = axes ~ 'Y ' %}
      {% if 'y' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'Y ' %}
      {% endif %}
    {% endif %}
    {% if params.Z is defined %}
      {% set axes = axes ~ 'Z ' %}
      {% if 'z' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'Z ' %}
      {% endif %}
    {% endif %}
    {% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
      {% set axes = '' %}
      {% if 'x' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'X ' %}
      {% endif %}
      {% if 'y' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'Y ' %}
      {% endif %}
      {% if 'z' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'Z ' %}
      {% endif %}
    {% endif %}
    {% if isHomed is false %}
      M117 Homing {axesToHome}
      RESPOND MSG="Homing {axesToHome}"
      G28 {axesToHome}
    {% else %}
      RESPOND MSG="All requested axes already homed, skipping.."
    {% endif %}
  {% endif %}
