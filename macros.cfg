# WARNING: DO NOT EDIT THIS FILE
# To override settings from this file, you can copy and paste the relevant
# sections into your printer.cfg and change it there.

#####
# INCLUDE MACRO FILES
#####
[include macros/util.cfg]
[include macros/filament.cfg]
[include macros/mesh.cfg]
[include macros/parking.cfg]
[include macros/priming.cfg]
[include macros/user-hooks.cfg]

#####
# GENERAL MACROS
#####

[gcode_macro PAUSE]
description: Pauses the printer
rename_existing: PAUSE_BASE
variable_extrude: 1.5
gcode:
	SAVE_GCODE_STATE NAME=PAUSE_state
	# Define park positions 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	CACHE_TOOLHEAD_SETTINGS
	SET_MACRO_TRAVEL_SETTINGS
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	# Calculate safe Z position
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set current_z = printer.toolhead.position.z|float %}
	{% if current_z < (max_z - 20.0) %}
			{% set z_safe = 20.0 %}
	{% else %}
			{% set z_safe = max_z - current_z %}
	{% endif %}
	PAUSE_BASE
	G91
	# Retract
	{% if printer.extruder.can_extrude|lower == 'true' %}
		G1 E-{E} F2100
	{% else %}
		{action_respond_info("Extruder not hot enough")}
	{% endif %}
	# Move to park position
	{% if "xyz" in printer.toolhead.homed_axes %}
		G1 Z{z_safe} F{z_speed}
		_PARK LOCATION={printer["gcode_macro RatOS"].pause_print_park_in} X={printer["gcode_macro RatOS"].pause_print_park_x}
	{% else %}
		{action_respond_info("Printer not homed")}
	{% endif %} 
	RESTORE_TOOLHEAD_SETTINGS

[gcode_macro RESUME]
description: Resumes the print if the printer is paused.
rename_existing: RESUME_BASE
gcode:
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	# Prime
	{% if printer.extruder.can_extrude|lower == 'true' %}
		G91
		G1 E{E} F2100
		G90
	{% else %}
		{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_travel_speed|float}
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
description: Cancels the printer
rename_existing: CANCEL_PRINT_BASE
gcode:
	END_PRINT
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	#SDCARD_RESET_FILE
	CANCEL_PRINT_BASE
	
#####
# START PRINT MACROS
# Call this from your slicer (custom g-code). 
# Read more here: https://rat-rig.github.io/V-CoreOS/#/slicers
#####

[gcode_macro START_PRINT]
description: Start print procedure, use this in your Slicer.
gcode:
	CLEAR_PAUSE
	{% if printer["gcode_macro RatOS"].force_absolute_position|lower == 'true' %}
	G90
	{% endif %}
	SAVE_GCODE_STATE NAME=start_print_state
	# Metric values
	G21
	# Absolute positioning
	G90 
	# Set extruder to absolute mode
	M82
	_USER_START_PRINT_BEFORE_HOMING
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_BEGIN_BATCH
	{% endif %}
	# Home if needed
	MAYBE_HOME
	{% if params.CHAMBER_TEMP is defined %}
	_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	_USER_START_PRINT_HEAT_CHAMBER CHAMBER_TEMP={params.CHAMBER_TEMP} BED_TEMP={printer["gcode_macro RatOS"].start_print_heat_chamber_bed_temp}
	{% endif %}
	M117 Heating bed...
	RESPOND MSG="Heating bed..."
	# Wait for bed to heat up
	M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }
	# Run the user created "AFTER_HEATING_BED" macro
	_USER_START_PRINT_AFTER_HEATING_BED
	# Run the customizable "AFTER_HEATING_BED" macro.
	_START_PRINT_AFTER_HEATING_BED
	# Run the user created "START_PRINT_BED_MESH" macro
	_USER_START_PRINT_BED_MESH
	# Run the customizable "BED_MESH" macro
	_START_PRINT_BED_MESH X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
	STOWABLE_PROBE_END_BATCH
	{% endif %}
	# Start heating extruder
	M104 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	# Run the users "PARK" macro
	_USER_START_PRINT_PARK
	# Run the customizable "PARK" macro
	_START_PRINT_PARK
	# Wait for extruder to heat up
	M117 Heating Extruder...
	RESPOND MSG="Heating Extruder..."
	M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }
	# Run the user created "AFTER_HEATING_EXTRUDER" macro.
	_USER_START_PRINT_AFTER_HEATING_EXTRUDER X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	# Run the customizable "AFTER_HEATING_EXTRUDER" macro.
	_START_PRINT_AFTER_HEATING_EXTRUDER X0={params.X0} X1={params.X1} Y0={params.Y0} Y1={params.Y1}
	M117 Printing...
	RESPOND MSG="Printing..."
	RESTORE_GCODE_STATE NAME=start_print_state
	# Set extrusion mode based on user configuration
	{% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
		M83
	{% else %}
		M82
	{% endif %}
	G92 E0

#####
# START PRINT MACRO HOOKS
# You can copy these to printer.cfg and modify them to your liking, or just use them as is.
####

[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode:
	{% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
		{% set min_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float %}
		{% set max_temp = printer["gcode_macro RatOS"].preheat_extruder_temp|float + 5 %}
		M117 Pre-heating extruder...
		RESPOND MSG="Pre-heating extruder..."
		# Wait for extruder to reach a predefined preheat temp so an inductive probe (if present) is at a predictable temp. 
		# Also allows the bed heat to spread a little, and softens any plastic that might be stuck to the nozzle.
		M104 S{min_temp}
		TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}
	{% endif %}

[gcode_macro _START_PRINT_AFTER_HEATING_EXTRUDER]
gcode:
	{% set has_start_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
		PRIME_LINE
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
		PRIME_BLOB
	# {% endif %}
	{% if has_start_offset %}
		{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
		{% set accel = printer["gcode_macro RatOS"].macro_travel_accel %}
		{% set old_accel = printer.toolhead.max_accel %}
		{% set old_decel = printer.toolhead.max_accel_to_decel %}
		{% set old_speed = printer.toolhead.max_velocity %}
		CACHE_TOOLHEAD_SETTINGS
		SET_MACRO_TRAVEL_SETTINGS
		G0 Z3 F{z_speed}
		G0 X{params.X0} Y{params.Y1} F{speed}
		RESTORE_TOOLHEAD_SETTINGS
	{% endif %}
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
		SKEW_PROFILE LOAD={printer["gcode_macro RatOS"].skew_profile}
	{% endif %}

[gcode_macro _START_PRINT_HEAT_CHAMBER]
description: Uses the extruder sensor to wait for chamber temp. Override the _START_PRINT_HEAT_CHAMBER macro to implement heated chamber handling.
gcode:
	{% if params.CHAMBER_TEMP is defined and params.BED_TEMP is defined and params.CHAMBER_TEMP|int > 0 %}
		{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
		{% set zSpeed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
		G0 Z{z} F{zSpeed}
		M84
		M117 Heating chamber...
		RESPOND MSG="Heating chamber..."
		M140 S{params.BED_TEMP}
		TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.CHAMBER_TEMP}
		MAYBE_HOME
	{% endif %}
 

#####
# END PRINT MACROS
# Call this from your slicer (custom g-code). 
# Read more here: https://rat-rig.github.io/V-CoreOS/#/slicers
#####

# The end_print macro is also called from CANCEL_PRINT.
[gcode_macro END_PRINT]
description: End print procedure, use this in your Slicer.
gcode:
	SAVE_GCODE_STATE NAME=end_print_state
	_USER_END_PRINT_BEFORE_HEATERS_OFF
	_END_PRINT_BEFORE_HEATERS_OFF
	TURN_OFF_HEATERS
	_USER_END_PRINT_AFTER_HEATERS_OFF
	_END_PRINT_AFTER_HEATERS_OFF
	_USER_END_PRINT_PARK
	_END_PRINT_PARK
	# Clear skew profile if any was loaded.
	{% if printer["gcode_macro RatOS"].skew_profile is defined %}
		SET_SKEW CLEAR=1
	{% endif %}
	# Steppers off
	M84
	# Part cooling fan off
	M107
	# Clear bed mesh so that G28 doesn't fail.
	BED_MESH_CLEAR
	M117 Done :)
	RESPOND MSG="Done :)"
	RESTORE_GCODE_STATE NAME=end_print_state

#####
# END PRINT MACRO HOOKS
# You can copy these to printer.cfg and modify them to your liking, or just use them as is.
####

[gcode_macro _END_PRINT_BEFORE_HEATERS_OFF]
gcode:
		RESPOND MSG="Cleaning up..."


[gcode_macro _END_PRINT_AFTER_HEATERS_OFF]
gcode:
	# Calculate safe Z position
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set current_z = printer.toolhead.position.z|float %}
	{% set z_hop = printer["gcode_macro RatOS"].end_print_park_z_hop|float %}
	{% if current_z < (max_z - z_hop) %}
			{% set z_safe = z_hop %}
	{% else %}
			{% set z_safe = max_z - current_z %}
	{% endif %}
	# Relative positioning
	G91
	# Retract the filament a bit before lifting the nozzle.
	G1 E-2 F3600
	# Move to safe Z position
	G0 Z{z_safe} F3600
	# Retract filament even more
	G1 E-2 F3600
	# Back to absolute positioning
	G90

####
# MESH MACROS
####