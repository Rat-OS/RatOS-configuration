#####
# LOAD FILAMENT 
#####
[gcode_macro LOAD_FILAMENT]
description: Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode:
	{% set temp = params.TEMP|default(220)|int %}
	{% if printer["dual_carriage"] is not defined %}
		_DEFAULT_LOAD_FILAMENT TEMP={temp}
	{% else %}
		{% if not printer.pause_resume.is_paused %}
			{% set toolhead = params.TOOLHEAD|default(-1)|int %}
		{% else %}
			{% set idex_mode = printer["gcode_macro PAUSE"].idex_mode|lower %}
			{% if idex_mode == 'copy' or idex_mode == 'mirror' %}
				{% set toolhead = params.TOOLHEAD|default(-1)|int %}
			{% else %}
				{% set toolhead = printer["gcode_macro PAUSE"].idex_toolhead|int %}
			{% endif %}
		{% endif %}
		{% if toolhead==0 or toolhead==1 %}
			_IDEX_LOAD_FILAMENT TEMP={temp} TOOLHEAD={toolhead}
		{% else %}
			RATOS_ECHO MSG="Please select toolhead! 0 = left, 1 = right toolhead"
		{% endif %}
	{% endif %}


[gcode_macro _DEFAULT_LOAD_FILAMENT]
description: Load filament macro for non IDEX printers.
gcode:
	# parameter
	{% set temp = params.TEMP|int %}

	# save gcode state
	SAVE_GCODE_STATE NAME=load_state

	# heating extruder
	RATOS_ECHO MSG="Heating..."
	M104 S{temp}				# set hotend temperature
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp}

	# load filament
	G91									# relative positioning
	_LOAD_FILAMENT			# load filament into the hotend
	G90									# absolute positioning

	# restore gcode state
	RESTORE_GCODE_STATE NAME=load_state


[gcode_macro _IDEX_LOAD_FILAMENT]
description: Load filament macro for IDEX printer.
gcode:
	# parameter
	{% set temp = params.TEMP|int %}
	{% set toolhead = params.TOOLHEAD|int %}

	# idex mode
	{% set idex_mode = printer["gcode_macro PAUSE"].idex_mode|lower %}

	# cache current extruder
	{% set old_extruder = printer.toolhead.extruder %}

	# activate selected extruder
	ACTIVATE_EXTRUDER EXTRUDER=extruder{'' if toolhead==0 else toolhead}

	{% if not printer.pause_resume.is_paused %}

		# heating extruder
		RATOS_ECHO MSG="Heating Extruder T{toolhead}..."
		M104 S{temp} T{toolhead}
		TEMPERATURE_WAIT SENSOR=extruder{'' if toolhead==0 else toolhead} MINIMUM={temp}

		# load filament
		_LOAD_FILAMENT			# load filament into the hotend

	{% else %}

		# get filament cleaning position outside the oozeguard
		{% set parking_position = printer["gcode_macro RatOS"].parking_position %}
		{% set loading_position = printer["gcode_macro RatOS"].loading_position %}
		{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}

		# move outside the oozeguard
		G0 X{loading_position[toolhead]} F{speed}

		# load filament
		G91									# relative positioning
		_LOAD_FILAMENT			# load filament into the hotend
		G90									# absolute positioning

		# do a cleaning move and go back to the oozeguard
		G0 X{parking_position[toolhead]} F{speed}
		G0 X{loading_position[toolhead]} F{speed}
		G0 X{parking_position[toolhead]} F{speed}

	{% endif %}

	# reactivate original extruder
	ACTIVATE_EXTRUDER EXTRUDER={old_extruder}


[gcode_macro _LOAD_FILAMENT]
description: Loads the filament into the hotend.
gcode:
	_LOAD_FILAMENT_FROM_FEEDER_TO_TOOLHEAD
	_LOAD_FILAMENT_FROM_TOOLHEAD_INTO_EXTRUDER
	_LOAD_FILAMENT_INTO_NOZZLE
	#_NOZZLE_CLEANING
	

[gcode_macro _LOAD_FILAMENT_FROM_FEEDER_TO_TOOLHEAD]
description: Loads the filament from a filament feeder to the toolhead.
gcode:
	# config
	{% set has_filament_feeder = false %}
	{% set has_toolhead_filament_sensor = false %}

	# load filament from feeder to toolhead
	{% if has_filament_feeder and has_toolhead_filament_sensor %}
		RATOS_ECHO MSG="Loading filament from feeder to toolhead.."
		# feeder stepper homing move with the toolhead filament sensor as a endstop
		RATOS_ECHO MSG="Filament loaded from feeder to toolhead."
	{% endif %}


[gcode_macro _LOAD_FILAMENT_FROM_TOOLHEAD_INTO_EXTRUDER]
description: Loads the filament into the extruder.
gcode:
	# config
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set has_toolhead_filament_sensor = false %}
	# has_toolhead_filament_sensor												has the toolhead a filament sensor on top
	# tooolhead_sensor_to_extruder_gear_mm								distance in mm between the point where the filament sensor triggers and the point where the filament hits the extruder gears
	# extruder_gear_to_cooling_position_mm								distance in mm between the extruder gears and the center of the heatsink cooling tube
	# push_and_pull_offset = 10

	{% if has_toolhead_filament_sensor %}

		# move filament to cooling position. The center of the heatsink cooling tube
		RATOS_ECHO MSG="Loading filament into extruder.."
		G92 E0
		G0 E{tooolhead_sensor_to_extruder_gear_mm + extruder_gear_to_cooling_position_mm} F{load_speed}
		M400

		# extruder push and pull test
		G92 E0
		G0 E-{(tooolhead_sensor_to_extruder_gear_mm + extruder_gear_to_cooling_position_mm - push_and_pull_offset)} F{load_speed}
		M400
		{% set is_toolhead_filament_sensor_triggered = false %}
		{% if is_toolhead_filament_sensor_triggered %}
			# move filament back to cooling position
			G92 E0
			G0 E{(tooolhead_sensor_to_extruder_gear_mm + extruder_gear_to_cooling_position_mm - push_and_pull_offset)} F{load_speed}
			M400
			RATOS_ECHO MSG="Filament successfully loaded into the extruder!"
		{% else %}
			{action_raise_error("Could not load filament into the extruder!")}
		{% endif %}

	{% endif %}


[gcode_macro _LOAD_FILAMENT_INTO_NOZZLE]
description: Tries to load the filament into the extruder.
gcode:
	# config
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}

	# load filament into the hotend
	RATOS_ECHO MSG="Loading filament..."
	G0 E{load_length} F{load_speed}			# Load the filament into the hotend area
	G4 P1000														# Wait a second
	G0 E40 F100													# Purge
	M400																# Wait for purge to complete
	RATOS_ECHO MSG="Filament loaded!"


[gcode_macro _LOAD_FILAMENT_INTO_NOZZLE]
description: Tries to load the filament into the extruder.
gcode:
	# config
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set load_length = printer["gcode_macro RatOS"].filament_load_length|float %}

	# load filament into the hotend
	RATOS_ECHO MSG="Loading filament..."
	G0 E{load_length} F{load_speed}			# Load the filament into the hotend area
	G4 P1000														# Wait a second
	G0 E40 F100													# Purge
	M400																# Wait for purge to complete
	RATOS_ECHO MSG="Filament loaded!"


#####
# UNLOAD FILAMENT 
#####
[gcode_macro UNLOAD_FILAMENT]
description: Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode:
	{% set temp = params.TEMP|default(220)|int %}
	{% if printer["dual_carriage"] is not defined %}
		SAVE_GCODE_STATE NAME=unload_state
		G91					# relative positioning
		RATOS_ECHO MSG="Heating..."
		M104 S{temp}
		TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp}
		_UNLOAD_FILAMENT
		RESTORE_GCODE_STATE NAME=unload_state
	{% else %}
		{% if not printer.pause_resume.is_paused %}
			{% set t = params.TOOLHEAD|default(-1)|int %}
			{% if t==0 or t==1 %}
				{% set old_extruder = printer.toolhead.extruder %}
				RATOS_ECHO MSG="Heating Extruder T{t}..."          # response
				M104 S{temp} T{t}
				ACTIVATE_EXTRUDER EXTRUDER=extruder{'' if t==0 else t}
				TEMPERATURE_WAIT SENSOR=extruder{'' if t==0 else t} MINIMUM={temp}
				_UNLOAD_FILAMENT
				ACTIVATE_EXTRUDER EXTRUDER={old_extruder}
			{% else %}
				RATOS_ECHO MSG="Please select toolhead! 0 = left, 1 = right toolhead"
			{% endif %}
		{% else %}
			{% set idex_mode = printer["gcode_macro PAUSE"].idex_mode|lower %}
			{% if idex_mode == 'copy' or idex_mode == 'mirror' %}
				{% set t = params.TOOLHEAD|default(-1)|int %}
			{% else %}
				{% set t = printer["gcode_macro PAUSE"].idex_toolhead|int %}
			{% endif %}
			{% if t==0 or t==1 %}
				{% set old_extruder = printer.toolhead.extruder %}
				ACTIVATE_EXTRUDER EXTRUDER=extruder{'' if t==0 else t}
				{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
				{% set parking_position = printer["gcode_macro RatOS"].parking_position %}
				{% set loading_position = printer["gcode_macro RatOS"].loading_position %}
				G0 X{loading_position[t]} F{speed}
				_UNLOAD_FILAMENT AUTO=true TOOLHEAD={t}
				ACTIVATE_EXTRUDER EXTRUDER={old_extruder}
			{% else %}
				RATOS_ECHO MSG="Please select toolhead! 0 = left, 1 = right toolhead"
			{% endif %}
		{% endif %}
	{% endif %}

[gcode_macro _UNLOAD_FILAMENT]
gcode:
	{% set unload_speed = printer["gcode_macro RatOS"].filament_unload_speed|float * 60 %}
	{% set unload_length = printer["gcode_macro RatOS"].filament_unload_length|float %}
	RATOS_ECHO MSG="Unloading filament..."
	# Extrude a bit
	G0 E10 F300
	# Extract filament to cold end area 
	G0 E-5 F3600
	{% if params.AUTO is defined %}
		{% if params.AUTO|lower == 'true' %}
			{% set parking_position = printer["gcode_macro RatOS"].parking_position %}
			{% set loading_position = printer["gcode_macro RatOS"].loading_position %}
			{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
			G0 X{parking_position[params.TOOLHEAD|int]} F{speed}
			G0 X{loading_position[params.TOOLHEAD|int]} F{speed}
			G0 X{parking_position[params.TOOLHEAD|int]} F{speed}
		{% endif %}
	{% endif %}
	# Wait for three seconds
	G4 P3000
	# Push back the filament to smash any stringing 
	G0 E5 F3600
	# Extract back fast in to the cold zone 
	G0 E-15 F3600
	# Continue extraction slowly, allow the filament time to cool solid before it reaches the gears       
	G0 E-{unload_length} F{unload_speed}
	RATOS_ECHO MSG="Filament unloaded! Please inspect the tip of the filament before reloading."

#####
# COLOR CHANGE
#####
[gcode_macro M600]
description: Executes a color change by pausing the printer an unloading the filament.
gcode:
	PAUSE
	UNLOAD_FILAMENT
	RATOS_ECHO MSG="Please load new filament and resume"
