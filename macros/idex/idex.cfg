[gcode_macro RatOS]
variable_auto_center_subject: False		# EXPERIMENTAL: auto center printed parts in x axis for idex copy and mirror mode

[gcode_macro IDEX_SINGLE]
gcode:
	_IDEX_SINGLE

[gcode_macro _IDEX_SINGLE]
gcode:
	# Handle toolhead settings
	CACHE_TOOLHEAD_SETTINGS
	SET_MACRO_TRAVEL_SETTINGS

	# parameters
	{% set init = params.INIT|default(0)|int %}
	{% set new_x = params.X|default(-1)|int %}

	# config
	{% set idex_mode = printer["dual_carriage"].carriage_1|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed * 60 %}
	{% set default_toolhead = printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}
	{% set printable_x_max = printer["gcode_macro RatOS"].printable_x_max|float %}
	{% set center_x = printable_x_max / 2 %}
	{% set act_t = 1 if idex_mode == 'primary' else 0 %}
	{% set parking_position_act_t = printer["gcode_macro T%s" % (0 if act_t==1 else 1)].parking_position|float %}
	{% set parking_position_default_t = printer["gcode_macro T%s" % (0 if default_toolhead==1 else 1)].parking_position|float %}

	DEBUG_ECHO PREFIX="IDEX_SINGLE" MSG="init: {init}, new_x: {new_x}, idex_mode: {idex_mode}, printable_x_max: {printable_x_max}, center_x: {center_x}, act_t: {act_t}"

	{% if idex_mode == "copy" or idex_mode == "mirror" or init == 1 %}

		# reset gcode offset
		{% if 'x' in printer.toolhead.homed_axes %}
			{% if idex_mode == "copy" or idex_mode == "mirror" %}
				DEBUG_ECHO PREFIX="IDEX_SINGLE" MSG="reset gcode offset"
				G1 X{center_x} F{(speed)}
				SET_GCODE_OFFSET X_ADJUST={center_x / 2} MOVE=0
			{% endif %}
		{% endif %}

		# activate default carriage
		DEBUG_ECHO PREFIX="IDEX_SINGLE" MSG="activate default carriage"
		SET_DUAL_CARRIAGE CARRIAGE={default_toolhead} MODE=PRIMARY

		# set toolheads
		{% if 'x' in printer.toolhead.homed_axes %}
			DEBUG_ECHO PREFIX="IDEX_SINGLE" MSG="set toolheads"
			G90                                                           # absolute positioning

			DEBUG_ECHO PREFIX="IDEX_SINGLE" MSG="move secondary toolhead to parking position."
			SET_DUAL_CARRIAGE CARRIAGE={0 if default_toolhead==1 else 1}
			G1 X{parking_position_default_t} F{(speed)}   

			DEBUG_ECHO PREFIX="IDEX_SINGLE" MSG="move default toolhead to its new position."
			SET_DUAL_CARRIAGE CARRIAGE={default_toolhead}
			{% if new_x == -1 %}
				{% set new_x = center_x %}
			{% endif %}
			G1 X{new_x} F{(speed)}   

			M400                                                          # wait for movements
		{% else %}
			DEBUG_ECHO PREFIX="IDEX_SINGLE" MSG="X Axis not homed."
			# select primary toolhead
			SET_DUAL_CARRIAGE CARRIAGE={default_toolhead}
		{% endif %}

		# set extruder motion queue
		DEBUG_ECHO PREFIX="IDEX_SINGLE" MSG="set extruder motion queue."
		ACTIVATE_EXTRUDER EXTRUDER=extruder{'' if default_toolhead==0 else default_toolhead}
		SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=extruder
		SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder1

		# set toolhead offset
		DEBUG_ECHO PREFIX="IDEX_SINGLE" MSG="set toolhead offset."
		_SET_TOOLHEAD_OFFSET T={default_toolhead}

		# set input shaper
		DEBUG_ECHO PREFIX="IDEX_SINGLE" MSG="set input shaper."
		{% set shaper_x_freq = printer["gcode_macro RatOS"].shaper_x_freq %}
		{% set shaper_y_freq = printer["gcode_macro RatOS"].shaper_y_freq %}
		{% set shaper_x_type = printer["gcode_macro RatOS"].shaper_x_type %}
		{% set shaper_y_type = printer["gcode_macro RatOS"].shaper_y_type %}
		SET_INPUT_SHAPER SHAPER_FREQ_X={(shaper_x_freq[default_toolhead]|float)} SHAPER_FREQ_Y={(shaper_y_freq[default_toolhead]|float)} SHAPER_TYPE_X={(shaper_x_type[default_toolhead]|lower)} SHAPER_TYPE_Y={(shaper_y_type[default_toolhead]|lower)}

		# update Frontend
		DEBUG_ECHO PREFIX="IDEX_SINGLE" MSG="update Frontend."
		SET_GCODE_VARIABLE MACRO=T0 VARIABLE=active VALUE={True if default_toolhead==0 else False}
		SET_GCODE_VARIABLE MACRO=T1 VARIABLE=active VALUE={True if default_toolhead==1 else False}
	{% else %}
		{% if "xyz" in printer.toolhead.homed_axes %}
				DEBUG_ECHO PREFIX="IDEX_SINGLE" MSG="move secondary toolhead to parking position"
				SET_DUAL_CARRIAGE CARRIAGE={0 if act_t==1 else 1}
				G1 X{parking_position_act_t} F{(speed)}   
				SET_DUAL_CARRIAGE CARRIAGE={act_t}
		{% else %}
			DEBUG_ECHO PREFIX="IDEX_SINGLE" MSG="Axis not homed."
			# select primary toolhead
			SET_DUAL_CARRIAGE CARRIAGE={default_toolhead}
		{% endif %}
	{% endif %}

	# Handle toolhead settings
	RESTORE_TOOLHEAD_SETTINGS

[gcode_macro IDEX_COPY]
gcode:
	_IDEX_COPY

[gcode_macro _IDEX_COPY]
gcode:
	# Handle toolhead settings
	CACHE_TOOLHEAD_SETTINGS
	SET_MACRO_TRAVEL_SETTINGS

	# parameters
  {% set y = params.Y|default(-1)|int %}
	{% set dance = params.DANCE|default(1)|int %}

	# config
	{% set idex_mode = printer["dual_carriage"].carriage_1|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed * 60 %}
	{% set default_toolhead = printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}
	{% set printable_x_max = printer["gcode_macro RatOS"].printable_x_max|float %}
	{% set center_x = printable_x_max / 2 %}

	DEBUG_ECHO PREFIX="IDEX_COPY" MSG="idex_mode: {idex_mode}, printable_x_max: {printable_x_max}, center_x: {center_x}, dance: {dance}, y: {y}"

	# set idex mode
	{% if "xyz" in printer.toolhead.homed_axes %}
		{% if idex_mode != "copy" %}
			{% if idex_mode == "mirror" %}
				{% if y>=0 %}
					G1 X{center_x} Y{y} F{(speed)}
				{% else %}
					G1 X{center_x} F{(speed)}
				{% endif %}
			{% endif %}

			{% if idex_mode == "primary" or idex_mode == "inactive" %}
				_IDEX_SET_TOOLHEADS
			{% endif %}

			# set extruder motion queue
			ACTIVATE_EXTRUDER EXTRUDER='extruder'
			SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=extruder
			SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder

			# activate copy mode
			SET_DUAL_CARRIAGE CARRIAGE=1 MODE=COPY

			# sync pressure advance
			{% if idex_mode != "mirror" %}
				SET_PRESSURE_ADVANCE
			{% endif %}

			# set toolhead offset
			{% if idex_mode != "mirror" %}
				SET_GCODE_OFFSET X_ADJUST=-{center_x / 2} MOVE=0
			{% else %}
				_SET_TOOLHEAD_OFFSET T={default_toolhead}
			{% endif %}
	
			# dance
			{% if dance == 1 %}
				G1 X{center_x} F{(speed)}
				G1 X{center_x - 30} F{(speed)}
				G1 X{center_x + 30} F{(speed)}
				G1 X{center_x} F{(speed)}
			{% endif %}

			# set input shaper
			{% set shaper_x_freq = printer["gcode_macro RatOS"].shaper_x_freq %}
			{% set shaper_y_freq = printer["gcode_macro RatOS"].shaper_y_freq %}
			{% set shaper_x_type = printer["gcode_macro RatOS"].shaper_x_type %}
			{% set shaper_y_type = printer["gcode_macro RatOS"].shaper_y_type %}
			SET_INPUT_SHAPER SHAPER_FREQ_X={(shaper_x_freq[2]|float)} SHAPER_FREQ_Y={(shaper_y_freq[2]|float)} SHAPER_TYPE_X={(shaper_x_type[2]|lower)} SHAPER_TYPE_Y={(shaper_y_type[2]|lower)}

			# update Frontend
			SET_GCODE_VARIABLE MACRO=T0 VARIABLE=active VALUE=True
			SET_GCODE_VARIABLE MACRO=T1 VARIABLE=active VALUE=True

		{% endif %}
	{% else %}
		{action_respond_info("Printer not homed")}
	{% endif %} 

	# Handle toolhead settings
	RESTORE_TOOLHEAD_SETTINGS

[gcode_macro IDEX_MIRROR]
gcode:
	_IDEX_MIRROR

[gcode_macro _IDEX_MIRROR]
gcode:
	# Handle toolhead settings
	CACHE_TOOLHEAD_SETTINGS
	SET_MACRO_TRAVEL_SETTINGS

	# parameters
	{% set dance = params.DANCE|default(1)|int %}
	{% set priming = params.PRIMING|default(0)|int %}

	# config
	{% set idex_mode = printer["dual_carriage"].carriage_1|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed * 60 %}
	{% set default_toolhead = printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}
	{% set printable_x_max = printer["gcode_macro RatOS"].printable_x_max|float %}
	{% set center_x = printable_x_max / 2 %}

	DEBUG_ECHO PREFIX="IDEX_MIRROR" MSG="idex_mode: {idex_mode}, printable_x_max: {printable_x_max}, center_x: {center_x}, dance: {dance}"

	# set idex mode
	{% if "xyz" in printer.toolhead.homed_axes %}
		{% if idex_mode != "mirror" %}

			{% if idex_mode == "copy" %}
				G1 X{center_x} F{(speed)}
			{% endif %}

			{% if idex_mode == "primary" or idex_mode == "inactive" %}
				_IDEX_SET_TOOLHEADS MIRROR_PRIMING={params.PRIMING}
			{% endif %}

			# set extruder motion queue
			ACTIVATE_EXTRUDER EXTRUDER='extruder'
			SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=extruder
			SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder

			# activate mirror mode
			SET_DUAL_CARRIAGE CARRIAGE=1 MODE=MIRROR

			# sync pressure advance
			{% if idex_mode != "copy" %}
				SET_PRESSURE_ADVANCE
			{% endif %}

			# set toolhead offset
			{% if idex_mode != "copy" %}
				SET_GCODE_OFFSET X_ADJUST=-{center_x / 2} MOVE=0
			{% else %}
				_SET_TOOLHEAD_OFFSET T={default_toolhead}
			{% endif %}

			# dance
			{% if dance and not priming %}
				G1 X{center_x} F{(speed)}
				G1 X{center_x - 30} F{(speed)}
				G1 X{center_x + 30} F{(speed)}
				G1 X{center_x} F{(speed)}
			{% endif %}

			# set input shaper
			{% set shaper_x_freq = printer["gcode_macro RatOS"].shaper_x_freq %}
			{% set shaper_y_freq = printer["gcode_macro RatOS"].shaper_y_freq %}
			{% set shaper_x_type = printer["gcode_macro RatOS"].shaper_x_type %}
			{% set shaper_y_type = printer["gcode_macro RatOS"].shaper_y_type %}
			SET_INPUT_SHAPER SHAPER_FREQ_X={(shaper_x_freq[3]|float)} SHAPER_FREQ_Y={(shaper_y_freq[3]|float)} SHAPER_TYPE_X={(shaper_x_type[3]|lower)} SHAPER_TYPE_Y={(shaper_y_type[3]|lower)}

			# update Frontend
			SET_GCODE_VARIABLE MACRO=T0 VARIABLE=active VALUE=True
			SET_GCODE_VARIABLE MACRO=T1 VARIABLE=active VALUE=True

		{% endif %}
	{% else %}
		{action_respond_info("Printer not homed")}
	{% endif %} 

	# Handle toolhead settings
	RESTORE_TOOLHEAD_SETTINGS

[gcode_macro _IDEX_SET_TOOLHEADS]
gcode:
	# Handle toolhead settings
	CACHE_TOOLHEAD_SETTINGS
	SET_MACRO_TRAVEL_SETTINGS

	# parameters
	{% set mirror_priming = params.MIRROR_PRIMING|default(0)|int %}

	# idex mode
	{% set idex_mode = printer["dual_carriage"].carriage_1|lower %}
	{% set act_t = 1 if idex_mode == 'primary' else 0 %}
	{% set printable_x_max = printer["gcode_macro RatOS"].printable_x_max|float %}
	{% set center_x = printable_x_max / 2 %}

	# config
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed * 60 %}
	{% set default_toolhead = printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}
	{% set parking_position_inactive_t = printer["gcode_macro T%s" % (0 if act_t==1 else 1)].parking_position|float %}
	{% set parking_position_t0 = printer["gcode_macro T0"].parking_position|float %}
	{% set parking_position_t1 = printer["gcode_macro T1"].parking_position|float %}

	DEBUG_ECHO PREFIX="_IDEX_SET_TOOLHEADS" MSG="idex_mode: {idex_mode}, act_t: {act_t}, center_x: {center_x}, mirror_priming: {mirror_priming}"

	# reset toolhead offset
	{% if act_t != default_toolhead %}
		_SET_TOOLHEAD_OFFSET T={default_toolhead} MOVE=1
	{% endif %}

	{% if mirror_priming %}

		# Bring toolheads to the same distance to the printable area so
		# they are correctly mirrored through the center of the build plate 
		{% if parking_position_t0|abs < parking_position_t1 - printable_x_max %}
			SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
			G1 X{printable_x_max + parking_position_t0|abs} F{(speed)}
		{% else %}
			SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
			G1 X{0 - (parking_position_t1 - printable_x_max)} F{(speed)}
		{% endif %}

	{% else %}

		# make sure inactive toolhead is in its parking position
		SET_DUAL_CARRIAGE CARRIAGE={0 if act_t==1 else 1} MODE=PRIMARY
		G1 X{parking_position_inactive_t} F{(speed)}

		# move dc toolhead to its new position in case its already active
		{% if act_t==1 %}
			SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
			G1 X{center_x / 2 + center_x} F{(speed)}
		{% endif %}

		# move x toolhead to its new position
		SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
		G1 X{center_x / 2} F{(speed)}

		# move dc toolhead to its new position
		SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
		G1 X{center_x / 2 + center_x} F{(speed)}

	{% endif %}

	# Handle toolhead settings
	RESTORE_TOOLHEAD_SETTINGS

[gcode_macro IDEX_PARK]
gcode:
	# ensures compatibility with users of helges mainsail fork
	PARK_TOOLHEAD

[gcode_macro PARK_TOOLHEAD]
gcode:
	# get IDEX mode
	{% set idex_mode = 'none' %}
	{% if printer["dual_carriage"] is defined %}
		{% set idex_mode = printer["dual_carriage"].carriage_1|lower %}
	{% endif %}
	{% set act_t = 1 if idex_mode=='primary' else 0 %}

	DEBUG_ECHO PREFIX="PARK_TOOLHEAD" MSG="Parking T{act_t}.."

	# config 
	{% set speed = printer["gcode_macro RatOS"].toolchange_travel_speed * 60 %}
	{% set acceleration = printer["gcode_macro RatOS"].toolchange_travel_accel %}
	{% set parking_position_act_t = printer["gcode_macro T%s" % act_t].parking_position|float %}
	{% set parking_position_inact_t = printer["gcode_macro T%s" % (0 if act_t==1 else 1)].parking_position|float %}

	# park toolhead
	{% if idex_mode != "copy" and idex_mode != "mirror" and 'x' in printer.toolhead.homed_axes %}
		SAVE_GCODE_STATE NAME=_PARK_TOOLHEAD
		G90                         # absolute positioning
		SET_VELOCITY_LIMIT ACCEL={acceleration} ACCEL_TO_DECEL={(acceleration/2)}

		# move both toolheads to parking position
		G1 X{parking_position_act_t} F{(speed)}                     
		SET_DUAL_CARRIAGE CARRIAGE={0 if act_t==1 else 1}
		G1 X{parking_position_inact_t} F{(speed)}    
		SET_DUAL_CARRIAGE CARRIAGE={act_t}

		SET_VELOCITY_LIMIT ACCEL={printer.toolhead.max_accel} ACCEL_TO_DECEL={(printer.toolhead.max_accel/2)}
		M400                        # wait for movements
		RESTORE_GCODE_STATE NAME=_PARK_TOOLHEAD 
	{% endif %}
