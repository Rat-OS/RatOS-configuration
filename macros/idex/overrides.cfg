# WARNING: DO NOT EDIT THIS FILE
# To override settings from this file, you can copy and paste the relevant
# sections into your printer.cfg and change it there.

[gcode_macro M84]
rename_existing: M84.1
gcode:
	# reset is_printing_gcode state
	SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=is_printing_gcode VALUE=False
	# reset applied toolhead offset index
	_SET_TOOLHEAD_OFFSET T={printer["gcode_macro RatOS"].default_toolhead|int} MOVE=0
	# reset pressure advance toolhead syncing
	SET_GCODE_VARIABLE MACRO=SET_PRESSURE_ADVANCE VARIABLE=snyc_toolheads VALUE=False
	# reset swapped toolheads mode
	SET_GCODE_VARIABLE MACRO=_IDEX_REMAP_TOOLHEADS VARIABLE=enabled VALUE=False
	# reset spool join mode
	SET_GCODE_VARIABLE MACRO=_IDEX_JOIN_SPOOLS VARIABLE=enabled VALUE=False
	# reset offsets
	# this is a temporarily safety measurement and very anoying
	# to ensure we start the next print with known offsets 
	# the anoying part is that when you do live first layer z-offset baby steps, 
	# the value is gone after a M84 and you cant save it 
	# and probably some other side effects as well 
	SET_GCODE_OFFSET X=0 Y=0 Z=0 MOVE=0
	M84.1
	# activate IDEX default
	_IDEX_SINGLE INIT=1
	# visual feedback
	_LED_MOTORS_OFF


[gcode_macro SET_PRESSURE_ADVANCE]
variable_snyc_toolheads: False
rename_existing: SET_PRESSURE_ADVANCE_BASE
gcode:
	{% if params.SYNC_TOOLHEADS is defined %}
		{% set snyc_toolheads = true if params.SYNC_TOOLHEADS|default(false)|lower == 'true' else false %}  
		SET_GCODE_VARIABLE MACRO=SET_PRESSURE_ADVANCE VARIABLE=snyc_toolheads VALUE=True
		RATOS_ECHO PREFIX="SET_PRESSURE_ADVANCE" MSG="Syncing toolheads..."
	{% else %}
		{% set idex_mode = printer["dual_carriage"].carriage_1|default('')|lower %}
		{% set act_t = 1 if idex_mode == 'primary' else 0 %}
		{% if idex_mode == 'copy' or idex_mode == 'mirror' or snyc_toolheads %}
			{% set advance = params.ADVANCE|default(printer['extruder'].pressure_advance|float)|float %}  
			{% set smooth_time = params.SMOOTH_TIME|default(printer['extruder'].smooth_time|float)|float %}  
			RATOS_ECHO PREFIX="SET_PRESSURE_ADVANCE" MSG="T0"
			SET_PRESSURE_ADVANCE_BASE EXTRUDER='extruder' ADVANCE={advance} SMOOTH_TIME={smooth_time}
			RATOS_ECHO PREFIX="SET_PRESSURE_ADVANCE" MSG="T1"
			SET_PRESSURE_ADVANCE_BASE EXTRUDER='extruder1' ADVANCE={advance} SMOOTH_TIME={smooth_time}
		{% else %}
			{% set advance = params.ADVANCE|default(printer['extruder' if act_t == 0 else 'extruder1'].pressure_advance|float)|float %}  
			{% set smooth_time = params.SMOOTH_TIME|default(printer['extruder' if act_t == 0 else 'extruder1'].smooth_time|float)|float %}  
			SET_PRESSURE_ADVANCE_BASE EXTRUDER={'extruder' if act_t == 0 else 'extruder1'} ADVANCE={advance} SMOOTH_TIME={smooth_time}
			RATOS_ECHO PREFIX="SET_PRESSURE_ADVANCE" MSG={"T%s" % act_t}
		{% endif %}

	{% endif %}

[gcode_macro M106]
# Only rename_existing if you have a sacrificial [fan] section
rename_existing: M106.1
# The variable that controls fan speed swopping if not specifying P parameter
# -1 means the control is disabled, a value of 0-1 is the requested fan speed.
# Access via {printer["gcode_macro M106"].swap_speed}
variable_swap_speed: -1
gcode:
	# parameters
	{% set s = [[params.S|default(255)|int, 255]|min, 0]|max %}
	{% set p = params.P|default(-1)|int %}
	{% set speed = s / 255 %}

	# get IDEX mode
	{% set idex_mode = printer["dual_carriage"].carriage_1|default('')|lower %}
	{% set t = 1 if idex_mode=='primary' else 0 %}
	{% set sync_fans = true if printer["gcode_macro RatOS"].toolchange_sync_fans|default(0)|int == 1 else false %}
	{% if idex_mode == "copy" or idex_mode == "mirror" %}
		{% set sync_fans = true %}
	{% endif %}

	# check for deactivated toolheads
	{% if sync_fans and idex_mode != "copy" and idex_mode != "mirror" %}
		# get toolshift counter
		{% set total_toolshifts = printer["gcode_macro START_PRINT"].total_toolshifts|int %}
		{% set toolshift_count = printer["gcode_macro _TOOLCHANGE"].toolshift_count|int %}

		# deactivate fan sync if needed
		{% if toolshift_count > total_toolshifts %}
			{% set sync_fans = false %}
		{% endif %}
	{% endif %}

	# Set speed to -1 by default
	SET_GCODE_VARIABLE MACRO=M106 VARIABLE=swap_speed VALUE=-1

	# Set speed
	{% if p == -1 %}
		# Set current active extruder fan
		{% if speed == 0 %}
			# Always turn off all fans if S0 is specified without a specific fan
			SET_FAN_SPEED FAN=part_fan_t0 SPEED={speed}
			SET_FAN_SPEED FAN=part_fan_t1 SPEED={speed}
		{% else %}
			# Opt into fan speed swop control
			SET_GCODE_VARIABLE MACRO=M106 VARIABLE=swap_speed VALUE={speed}
			SET_FAN_SPEED FAN=part_fan_t0 SPEED={(speed if (t == 0 or sync_fans) else 0)}
			SET_FAN_SPEED FAN=part_fan_t1 SPEED={(speed if (t == 1 or sync_fans) else 0)}
		{% endif %}
	{% else %}
		# Set specified active extruder fan
		SET_FAN_SPEED FAN=part_fan_t0 SPEED={speed if t == p else 0}
		SET_FAN_SPEED FAN=part_fan_t1 SPEED={speed if t == p else 0}
	{% endif %}

	# Update core Klipper's fan speed
	M106.1 S{s}

[gcode_macro M107]
rename_existing: M107.1
gcode:
	{% set p = params.P|default(-1)|int %}
	M106 S0 P{p}
