#####
# IS MACROS
####
[gcode_macro GENERATE_SHAPER_GRAPHS]
description: Genarates input shaper resonances graphs for analysis. Uses the AXIS, TOOLHEAD, FREQUNECY_START and FREQUENCY_END parameter if you want to do specific measurements, (eg. GENERATE_SHAPER_GRAPHS AXIS=X TOOLHEAD=0 FREQUENCY_START=10 FREQUENCY_END=20)
gcode:
  # parameters 
  {% set measure_t0 = true %}
  {% set measure_t1 = true %}
  {% if params.TOOLHEAD is defined %}
    {% if params.TOOLHEAD|lower == '0' %}
      {% set measure_t1 = false %}
    {% elif params.TOOLHEAD|lower == '1' %}
      {% set measure_t0 = false %}
    {% else %}
      {action_raise_error("Unknown toolhead specified. Expected 0 or 1 (left or right)")}
    {% endif %}
  {% endif %}
  {% set axis = params.AXIS|default('')|lower %}
  {% set freq_start = params.FREQUENCY_START|default(10)|int %}
  {% set freq_end = params.FREQUENCY_END|default(133)|int %}
  {% set hz_per_sec = params.HZ_PER_SEC|default(1)|float %}

  # config
  {% set idex_mode = printer["dual_carriage"].carriage_1|default('')|lower %}
  {% set act_t = 1 if idex_mode == 'primary' else 0 %}
  {% set svv = printer.save_variables.variables %}
  {% set speed = printer["gcode_macro RatOS"].toolchange_travel_speed * 60 %}
  {% set home = printer["gcode_macro RatOS"].parking_position %}
  {% set acceleration = printer["gcode_macro RatOS"].toolchange_travel_accel %}
  {% set adxl_chip = printer["gcode_macro RatOS"].adxl_chip %}
  {% set probe_points = printer.configfile.settings.resonance_tester.probe_points[0] %}
  {% set default_toolhead = printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}
  {% set max_x = printer.configfile.settings.stepper_x.position_max|float %}
  {% set center_x = max_x / 2 %}

  # home toolheads
  MAYBE_HOME
  {% if idex_mode == 'copy' %}
    IDEX_COPY DANCE=0
  {% elif idex_mode == 'mirror' %}
    IDEX_MIRROR DANCE=0
  {% else %}
    IDEX_SINGLE
  {% endif %}
  G90

  # set travel move acceleration
  SET_VELOCITY_LIMIT ACCEL={acceleration} ACCEL_TO_DECEL={(acceleration/2)}

  # input shaping
  {% if axis != '' %}
    {% if axis == 'x' %}
      {% if idex_mode == 'copy' or idex_mode == 'mirror' %}
        {% if idex_mode == 'copy' %}
          IDEX_COPY DANCE=0
        {% elif idex_mode == 'mirror' %}
          IDEX_MIRROR DANCE=0
        {% endif %}
        G1 X{probe_points[0]} Y{probe_points[1]} F{speed}
        {% if idex_mode == 'copy' %}
          {% if measure_t0 == true %}
            TEST_RESONANCES AXIS=X CHIPS={adxl_chip[0]} NAME=t0_copy FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - center_x / 2},{probe_points[1]},{probe_points[2]}
          {% endif %}
          {% if measure_t1 == true %}
            TEST_RESONANCES AXIS=X CHIPS={adxl_chip[1]} NAME=t1_copy FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - center_x / 2},{probe_points[1]},{probe_points[2]}
          {% endif %}
          {% if measure_t0 == true %}
            RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 0 1 %s %s %s" % ('%0.3f'|format(probe_points[0] - center_x / 2), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
          {% endif %}
          {% if measure_t1 == true %}
            RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 1 1 %s %s %s" % ('%0.3f'|format(probe_points[0] - center_x / 2), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
          {% endif %}
        {% elif idex_mode == 'mirror' %}
          {% if measure_t0 == true %}
            TEST_RESONANCES AXIS=X CHIPS={adxl_chip[0]} NAME=t0_mirror FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - center_x / 2},{probe_points[1]},{probe_points[2]}
          {% endif %}
          {% if measure_t1 == true %}
            TEST_RESONANCES AXIS=X CHIPS={adxl_chip[1]} NAME=t1_mirror FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - center_x / 2},{probe_points[1]},{probe_points[2]}
          {% endif %}
          {% if measure_t0 == true %}
            RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 0 2 %s %s %s" % ('%0.3f'|format(probe_points[0] - center_x / 2), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
          {% endif %}
          {% if measure_t1 == true %}
            RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 1 2 %s %s %s" % ('%0.3f'|format(probe_points[0] - center_x / 2), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
          {% endif %}
        {% endif %}
      {% else %}
        G1 X{probe_points[0]} Y{probe_points[1]} F{speed}
        {% if measure_t0 == true %}
          T0 X{probe_points[0]} Y{probe_points[1]}
          TEST_RESONANCES AXIS=X CHIPS={adxl_chip[0]} NAME=t0 FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0]},{probe_points[1]},{probe_points[2]}
        {% endif %}
        {% if measure_t1 == true %}
          T1 X{probe_points[0]} Y{probe_points[0]}
          TEST_RESONANCES AXIS=X CHIPS={adxl_chip[1]} NAME=t1 FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0]},{probe_points[1]},{probe_points[2]}
        {% endif %}
        G4 P5000
        {% if measure_t0 == true and measure_t1 == false %}
          RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 0 0 %s %s %s" % ('%0.3f'|format(probe_points[0]), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
        {% elif measure_t0 == false and measure_t1 == true %}
          RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 1 0 %s %s %s" % ('%0.3f'|format(probe_points[0]), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
        {% elif measure_t0 == true and measure_t1 == true %}
          RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 2 0 %s %s %s" % ('%0.3f'|format(probe_points[0]), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
        {% endif %}
      {% endif %}
      RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
    {% elif axis == 'y' %}
      {% if idex_mode == 'copy' or idex_mode == 'mirror' %}
        {% if idex_mode == 'copy' %}
          IDEX_COPY DANCE=0
        {% elif idex_mode == 'mirror' %}
          IDEX_MIRROR DANCE=0
        {% endif %}
        G1 X{probe_points[0]} Y{probe_points[1]} F{speed}
        {% if idex_mode == 'copy' %}
          {% if measure_t0 == true %}
            TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[0]} NAME=t0_copy FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - center_x / 2},{probe_points[1]},{probe_points[2]}
          {% endif %}
          {% if measure_t1 == true %}
            TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[1]} NAME=t1_copy FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - center_x / 2},{probe_points[1]},{probe_points[2]}
          {% endif %}
          {% if measure_t0 == true %}
            RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 0 1 %s %s %s" % ('%0.3f'|format(probe_points[0] - center_x / 2), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
          {% endif %}
          {% if measure_t1 == true %}
            RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 1 1 %s %s %s" % ('%0.3f'|format(probe_points[0] - center_x / 2), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
          {% endif %}
        {% elif idex_mode == 'mirror' %}
          {% if measure_t0 == true %}
            TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[0]} NAME=t0_mirror FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - center_x / 2},{probe_points[1]},{probe_points[2]}
          {% endif %}
          {% if measure_t1 == true %}
            TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[1]} NAME=t1_mirror FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - center_x / 2},{probe_points[1]},{probe_points[2]}
          {% endif %}
          {% if measure_t0 == true %}
            RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 0 2 %s %s %s" % ('%0.3f'|format(probe_points[0] - center_x / 2), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
          {% endif %}
          {% if measure_t1 == true %}
            RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 1 2 %s %s %s" % ('%0.3f'|format(probe_points[0] - center_x / 2), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
          {% endif %}
        {% endif %}
      {% else %}
        G1 X{probe_points[0]} Y{probe_points[1]} F{speed}
        {% if measure_t0 == true %}
          T0 X{probe_points[0]} Y{probe_points[1]}
          TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[0]} NAME=t0 FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0]},{probe_points[1]},{probe_points[2]}
        {% endif %}
        {% if measure_t1 == true %}
          T1 X{probe_points[0]} Y{probe_points[0]}
          TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[1]} NAME=t1 FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0]},{probe_points[1]},{probe_points[2]}
        {% endif %}
        G4 P5000
        {% if measure_t0 == true and measure_t1 == false %}
          RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 0 0 %s %s %s" % ('%0.3f'|format(probe_points[0]), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
        {% elif measure_t0 == false and measure_t1 == true %}
          RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 1 0 %s %s %s" % ('%0.3f'|format(probe_points[0]), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
        {% elif measure_t0 == true and measure_t1 == true %}
          RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 2 0 %s %s %s" % ('%0.3f'|format(probe_points[0]), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
        {% endif %}
      {% endif %}
      RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
    {% else %}
      {action_raise_error("Unknown axis specified. Expected X or Y.")}
    {% endif %}
  {% else %}
    {% if idex_mode == 'copy' or idex_mode == 'mirror' %}
      {% if idex_mode == 'copy' %}
        IDEX_COPY DANCE=0
      {% elif idex_mode == 'mirror' %}
        IDEX_MIRROR DANCE=0
      {% endif %}
      G1 X{probe_points[0]} Y{probe_points[1]} F{speed}
      {% if idex_mode == 'copy' %}
        {% if measure_t0 == true %}
          TEST_RESONANCES AXIS=X CHIPS={adxl_chip[0]} NAME=t0_copy FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - center_x / 2},{probe_points[1]},{probe_points[2]}
          TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[0]} NAME=t0_copy FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - center_x / 2},{probe_points[1]},{probe_points[2]}
        {% endif %}
        {% if measure_t1 == true %}
          TEST_RESONANCES AXIS=X CHIPS={adxl_chip[1]} NAME=t1_copy FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - center_x / 2},{probe_points[1]},{probe_points[2]}
          TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[1]} NAME=t1_copy FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - center_x / 2},{probe_points[1]},{probe_points[2]}
        {% endif %}
        {% if measure_t0 == true %}
          RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 0 1 %s %s %s" % ('%0.3f'|format(probe_points[0] - center_x / 2), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
          RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 0 1 %s %s %s" % ('%0.3f'|format(probe_points[0] - center_x / 2), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
        {% endif %}
        {% if measure_t1 == true %}
          RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 1 1 %s %s %s" % ('%0.3f'|format(probe_points[0] - center_x / 2), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
          RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 1 1 %s %s %s" % ('%0.3f'|format(probe_points[0] - center_x / 2), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
        {% endif %}
      {% elif idex_mode == 'mirror' %}
        {% if measure_t0 == true %}
          TEST_RESONANCES AXIS=X CHIPS={adxl_chip[0]} NAME=t0_mirror FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - center_x / 2},{probe_points[1]},{probe_points[2]}
          TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[0]} NAME=t0_mirror FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - center_x / 2},{probe_points[1]},{probe_points[2]}
        {% endif %}
        {% if measure_t1 == true %}
          TEST_RESONANCES AXIS=X CHIPS={adxl_chip[1]} NAME=t1_mirror FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - center_x / 2},{probe_points[1]},{probe_points[2]}
          TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[1]} NAME=t1_mirror FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - center_x / 2},{probe_points[1]},{probe_points[2]}
        {% endif %}
        {% if measure_t0 == true %}
          RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 0 2 %s %s %s" % ('%0.3f'|format(probe_points[0] - center_x / 2), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
          RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 0 2 %s %s %s" % ('%0.3f'|format(probe_points[0] - center_x / 2), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
        {% endif %}
        {% if measure_t1 == true %}
          RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 1 2 %s %s %s" % ('%0.3f'|format(probe_points[0] - center_x / 2), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
          RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 1 2 %s %s %s" % ('%0.3f'|format(probe_points[0] - center_x / 2), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
        {% endif %}
      {% endif %}
    {% else %}
      G1 X{probe_points[0]} Y{probe_points[1]} F{speed}
      {% if measure_t0 == true %}
        T0 X{probe_points[0]} Y{probe_points[1]} 
        TEST_RESONANCES AXIS=X CHIPS={adxl_chip[0]} NAME=t0 FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0]},{probe_points[1]},{probe_points[2]}
        TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[0]} NAME=t0 FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0]},{probe_points[1]},{probe_points[2]}
      {% endif %}
      {% if measure_t1 == true %}
        T1 X{probe_points[0]} Y{probe_points[0]}
        TEST_RESONANCES AXIS=X CHIPS={adxl_chip[1]} NAME=t1 FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0]},{probe_points[1]},{probe_points[2]}
        TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[1]} NAME=t1 FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0]},{probe_points[1]},{probe_points[2]}
      {% endif %}
      G4 P5000
      {% if measure_t0 == true and measure_t1 == false %}
        RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 0 0 %s %s %s" % ('%0.3f'|format(probe_points[0]), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
        RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 0 0 %s %s %s" % ('%0.3f'|format(probe_points[0]), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
      {% elif measure_t0 == false and measure_t1 == true %}
        RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 1 0 %s %s %s" % ('%0.3f'|format(probe_points[0]), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
        RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 1 0 %s %s %s" % ('%0.3f'|format(probe_points[0]), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
      {% elif measure_t0 == true and measure_t1 == true %}
        RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 2 0 %s %s %s" % ('%0.3f'|format(probe_points[0]), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
        RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 2 0 %s %s %s" % ('%0.3f'|format(probe_points[0]), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
      {% endif %}
    {% endif %}
    RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
  {% endif %}

  # present used toolheads to make belt tensioning process easier
  {% if idex_mode != 'copy' and idex_mode != 'mirror' %}
    {% if measure_t0 == true and measure_t1 == true %}
      _IDEX_CENTER_TOOLHEADS
      SET_DUAL_CARRIAGE CARRIAGE={act_t}
    {% endif %}
  {% endif %}

  # reset acceleration
  SET_VELOCITY_LIMIT ACCEL={printer.toolhead.max_accel} ACCEL_TO_DECEL={(printer.toolhead.max_accel/2)}


[gcode_shell_command generate_shaper_graphs]
command: /home/pi/printer_data/config/custom/scripts/generate-shaper-graph.sh
timeout: 120.
verbose: True


[gcode_macro MEASURE_COREXY_BELT_TENSION]
description: Generates resonance graph used to ensure belts are equally tensioned. Uses the AXIS, TOOLHEAD, FREQUNECY_START and FREQUENCY_END parameter if you want to do specific measurements, (eg. GENERATE_SHAPER_GRAPHS AXIS=X TOOLHEAD=0 FREQUENCY_START=10 FREQUENCY_END=20)
gcode:
  # parameters 
  {% set measure_t0 = true %}
  {% set measure_t1 = true %}
  {% if params.TOOLHEAD is defined %}
    {% if params.TOOLHEAD|lower == '0' %}
      {% set measure_t1 = false %}
    {% elif params.TOOLHEAD|lower == '1' %}
      {% set measure_t0 = false %}
    {% else %}
      {action_raise_error("Unknown toolhead specified. Expected 0 or 1 (left or right)")}
    {% endif %}
  {% endif %}
  {% set freq_start = params.FREQUENCY_START|default(10)|int %}
  {% set freq_end = params.FREQUENCY_END|default(133)|int %}

  # config
  {% set idex_mode = printer["dual_carriage"].carriage_1|default('')|lower %}
  {% set svv = printer.save_variables.variables %}
  {% set speed = printer["gcode_macro RatOS"].toolchange_travel_speed * 60 %}
  {% set acceleration = printer["gcode_macro RatOS"].toolchange_travel_accel %}
  {% set home = printer["gcode_macro RatOS"].parking_position %}
  {% set adxl_chip = printer["gcode_macro RatOS"].adxl_chip %}
  {% set probe_points = printer.configfile.settings.resonance_tester.probe_points[0] %}
  {% set default_toolhead = printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}

  # home toolheads
  MAYBE_HOME
  IDEX_SINGLE
  G90

  # set travel move acceleration
  SET_VELOCITY_LIMIT ACCEL={acceleration} ACCEL_TO_DECEL={(acceleration/2)}

  {% if params.AXIS is defined %}
    {% if params.AXIS|lower == 'x' %}
      {% if measure_t1 == true %}
        T1 X{probe_points[0]} Y{probe_points[0]} 
        TEST_RESONANCES AXIS=X CHIPS={adxl_chip[1]} OUTPUT=raw_data NAME=t1 FREQ_START={freq_start} FREQ_END={freq_end}
      {% endif %}
      {% if measure_t0 == true %}
        T0 X{probe_points[0]} Y{probe_points[1]}
        TEST_RESONANCES AXIS=X CHIPS={adxl_chip[0]} OUTPUT=raw_data NAME=t0 FREQ_START={freq_start} FREQ_END={freq_end}
      {% endif %}
      G4 P5000
      {% if measure_t1 == true and measure_t0 == false %}
        RUN_SHELL_COMMAND CMD=generate_tension_graphs PARAMS="x 1"
      {% elif measure_t1 == false and measure_t0 == true %}
        RUN_SHELL_COMMAND CMD=generate_tension_graphs PARAMS="x 0"
      {% elif measure_t1 == true and measure_t0 == true %}
        RUN_SHELL_COMMAND CMD=generate_tension_graphs PARAMS=x
      {% endif %}
      RESPOND MSG="Belt tension graph generated for X and/or Y. You'll find them in the input_shaper folder in the machine tab!"
    {% elif params.AXIS|lower == 'y' %}
      {% if measure_t1 == false or measure_t0 == false %}
        {action_raise_error("Axis specified. Not supported for belt tension on Y.")}
      {% else %}
        T1 X{home[1]} Y{probe_points[0]}
        TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[1]},{adxl_chip[0]} OUTPUT=raw_data NAME=t2 POINT={home[1]},{probe_points[1]},{probe_points[2]} FREQ_START={freq_start} FREQ_END={freq_end}
        G4 P5000
        RUN_SHELL_COMMAND CMD=generate_tension_graphs PARAMS="y 2"
        RESPOND MSG="Belt tension graph generated for X and/or Y. You'll find them in the input_shaper folder in the machine tab!"
      {% endif %}
    {% else %}
        {action_raise_error("Unknown axis specified. Expected X or Y.")}
    {% endif %}
  {% else %}
    {% if measure_t1 == true %}
      T1 X{probe_points[0]} Y{probe_points[0]}
      TEST_RESONANCES AXIS=X CHIPS={adxl_chip[1]} OUTPUT=raw_data NAME=t1 FREQ_START={freq_start} FREQ_END={freq_end}
    {% endif %}
    {% if measure_t0 == true %}
      T0 X{probe_points[0]} Y{probe_points[1]}
      TEST_RESONANCES AXIS=X CHIPS={adxl_chip[0]} OUTPUT=raw_data NAME=t0 FREQ_START={freq_start} FREQ_END={freq_end}
    {% endif %}
    {% if params.TOOLHEAD is not defined %}
      T1 X{home[1]} Y{probe_points[0]}
      G1 X{home[1]} F{speed}
      TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[1]},{adxl_chip[0]} OUTPUT=raw_data NAME=t2 POINT={home[1]},{probe_points[1]},{probe_points[2]} FREQ_START={freq_start} FREQ_END={freq_end}
    {% endif %}
    G4 P5000
    {% if measure_t1 == true and measure_t0 == false %}
      RUN_SHELL_COMMAND CMD=generate_tension_graphs PARAMS="x 1"
    {% elif measure_t1 == false and measure_t0 == true %}
      RUN_SHELL_COMMAND CMD=generate_tension_graphs PARAMS="x 0"
    {% elif measure_t1 == true and measure_t0 == true %}
      RUN_SHELL_COMMAND CMD=generate_tension_graphs PARAMS=x
    {% endif %}
    {% if params.TOOLHEAD is not defined %}
      RUN_SHELL_COMMAND CMD=generate_tension_graphs PARAMS="y 2"
    {% endif %}
    RESPOND MSG="Belt tension graph generated for X and/or Y. You'll find them in the input_shaper folder in the machine tab!"
  {% endif %}

  # reset acceleration
  SET_VELOCITY_LIMIT ACCEL={printer.toolhead.max_accel} ACCEL_TO_DECEL={(printer.toolhead.max_accel/2)}


[gcode_shell_command generate_tension_graphs]
command: /home/pi/printer_data/config/custom/scripts/generate-belt-tension-graph.sh
timeout: 120.
verbose: True
