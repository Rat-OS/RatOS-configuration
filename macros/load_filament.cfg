[gcode_macro RatOS]
variable_enable_extruder_test: True											# tests if the filament passes the extruder gears
variable_cooling_position_to_nozzle_mm: 15							# distance between the cooling position and the nozzle
variable_tooolhead_sensor_to_extruder_gear_mm: 15				# distance in mm between the filament sensor trigger and where the filament hits the extruder gears
variable_extruder_gear_to_cooling_position_mm: 40				# distance in mm between the extruder gears and the center of the heatsink cooling tube
variable_purge_after_load: 40								

#####
# LOAD FILAMENT 
#####
[gcode_macro LOAD_FILAMENT]
description: Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode:
	{% set temp = params.TEMP|default(220)|int %}
	{% if printer["dual_carriage"] is not defined %}
		_DEFAULT_LOAD_FILAMENT TEMP={temp}
	{% else %}
		{% if not printer.pause_resume.is_paused %}
			{% set toolhead = params.TOOLHEAD|default(-1)|int %}
		{% else %}
			{% set idex_mode = printer["gcode_macro PAUSE"].idex_mode|lower %}
			{% if idex_mode == 'copy' or idex_mode == 'mirror' %}
				{% set toolhead = params.TOOLHEAD|default(-1)|int %}
			{% else %}
				{% set toolhead = printer["gcode_macro PAUSE"].idex_toolhead|int %}
			{% endif %}
		{% endif %}
		{% if toolhead==0 or toolhead==1 %}
			_IDEX_LOAD_FILAMENT TEMP={temp} TOOLHEAD={toolhead}
		{% else %}
			RATOS_ECHO MSG="Please select toolhead! 0 = left, 1 = right toolhead"
		{% endif %}
	{% endif %}


[gcode_macro _DEFAULT_LOAD_FILAMENT]
description: Load filament macro for non IDEX printers.
gcode:
	# parameter
	{% set temp = params.TEMP|int %}

	# save gcode state
	SAVE_GCODE_STATE NAME=load_state

	# heating extruder
	RATOS_ECHO MSG="Heating..."
	M104 S{temp}				# set hotend temperature
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp}

	# load filament
	_LOAD_FILAMENT TOOLHEAD=0

	# restore gcode state
	RESTORE_GCODE_STATE NAME=load_state


[gcode_macro _IDEX_LOAD_FILAMENT]
description: Load filament macro for IDEX printer.
gcode:
	# parameter
	{% set temp = params.TEMP|int %}
	{% set toolhead = params.TOOLHEAD|int %}

	# cache current extruder
	{% set old_extruder = printer.toolhead.extruder %}

	# activate selected extruder
	ACTIVATE_EXTRUDER EXTRUDER=extruder{'' if toolhead==0 else toolhead}

	# heating extruder
	{% if not printer.pause_resume.is_paused %}
		RATOS_ECHO MSG="Heating Extruder T{toolhead}..."
		M104 S{temp} T{toolhead}
		TEMPERATURE_WAIT SENSOR=extruder{'' if toolhead==0 else toolhead} MINIMUM={temp}
	{% endif %}

	# load filament
	_LOAD_FILAMENT TOOLHEAD={toolhead}

	# reactivate original extruder
	ACTIVATE_EXTRUDER EXTRUDER={old_extruder}


[gcode_macro _LOAD_FILAMENT]
description: Loads the filament into the hotend.
gcode:
	# parameter
	{% set toolhead = params.TOOLHEAD|int %}

	_BEFORE_LOAD_FILAMENT TOOLHEAD={toolhead}
	_LOAD_FILAMENT_FROM_FEEDER_TO_TOOLHEAD TOOLHEAD={toolhead}
	_LOAD_FILAMENT_FROM_TOOLHEAD_INTO_HOTEND TOOLHEAD={toolhead}
	_LOAD_FILAMENT_FROM_HOTEND_INTO_NOZZLE TOOLHEAD={toolhead}
	_AFTER_LOAD_FILAMENT TOOLHEAD={toolhead}


[gcode_macro _BEFORE_LOAD_FILAMENT]
gcode:
	# parameter
	{% set toolhead = params.TOOLHEAD|int %}


[gcode_macro _AFTER_LOAD_FILAMENT]
gcode:
	# parameter
	{% set toolhead = params.TOOLHEAD|int %}


[gcode_macro _LOAD_FILAMENT_FROM_FEEDER_TO_TOOLHEAD]
description: Loads the filament from a filament feeder to the toolhead.
gcode:
	# parameter
	{% set toolhead = params.TOOLHEAD|int %}

	# config
	{% set has_filament_feeder = false %}
	{% set has_toolhead_filament_sensor = printer["filament_switch_sensor toolhead_filament_sensor_t%s" % toolhead] is defined %}

	# load filament from feeder to toolhead
	{% if has_filament_feeder and has_toolhead_filament_sensor %}
		RATOS_ECHO MSG="Loading filament from feeder to toolhead.."
		# feeder stepper homing move with the toolhead filament sensor as a endstop
		RATOS_ECHO MSG="Filament loaded from feeder to toolhead."
	{% endif %}


[gcode_macro _LOAD_FILAMENT_FROM_TOOLHEAD_INTO_HOTEND]
description: Loads the filament into the hotend.
gcode:
	# parameter
	{% set toolhead = params.TOOLHEAD|int %}

	# config
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set enable_extruder_test = true if printer["gcode_macro RatOS"].enable_extruder_test|default(false) == 'true' else false %}
	{% set tooolhead_sensor_to_extruder_gear_mm = printer["gcode_macro RatOS"].tooolhead_sensor_to_extruder_gear_mm|float %}
	{% set extruder_gear_to_cooling_position_mm = printer["gcode_macro RatOS"].extruder_gear_to_cooling_position_mm|float %}
	{% set has_toolhead_filament_sensor = printer["filament_switch_sensor toolhead_filament_sensor_t%s" % toolhead] is defined %}

	# load filament into hotend
	RATOS_ECHO MSG="Loading filament into hotend.."
	{% if not has_toolhead_filament_sensor or not enable_extruder_test %}

		# move filament to cooling position. The center of the heatsink cooling tube
		G92 E0
		G0 E{extruder_gear_to_cooling_position_mm} F{load_speed}
		M400

	{% else %}
		{% set push_and_pull_offset = 10 %}

		# move filament to cooling position. The center of the heatsink cooling tube
		G92 E0
		G0 E{tooolhead_sensor_to_extruder_gear_mm + extruder_gear_to_cooling_position_mm} F{load_speed}
		M400

		# extruder push and pull test
		G92 E0
		G0 E-{(tooolhead_sensor_to_extruder_gear_mm + extruder_gear_to_cooling_position_mm - push_and_pull_offset)} F{load_speed}
		M400
		{% if printer["filament_switch_sensor toolhead_filament_sensor_t%s" % toolhead].runout_helper.filament_present %}
			# move filament back to cooling position
			G92 E0
			G0 E{(tooolhead_sensor_to_extruder_gear_mm + extruder_gear_to_cooling_position_mm - push_and_pull_offset)} F{load_speed}
			M400
		{% else %}
			{action_raise_error("Could not load filament into the hotend!")}
		{% endif %}

	{% endif %}
	RATOS_ECHO MSG="Filament loaded into hotend."


[gcode_macro _LOAD_FILAMENT_FROM_HOTEND_INTO_NOZZLE]
description: Loads the filament from the hotend into the nozzle.
gcode:
	# parameter
	{% set toolhead = params.TOOLHEAD|int %}

	# config
	{% set load_speed = printer["gcode_macro RatOS"].filament_load_speed|float * 60 %}
	{% set purge_after_load = printer["gcode_macro RatOS"].purge_after_load|float %}
	{% set cooling_position_to_nozzle_mm = printer["gcode_macro RatOS"].cooling_position_to_nozzle_mm|float %}

	# load filament into the hotend
	RATOS_ECHO MSG="Loading filament into nozzle..."
	G0 E{cooling_position_to_nozzle_mm} F{load_speed}			# Load the filament into the hotend area
	G4 P1000																							# Wait a second
	_LOAD_FILAMENT_BEFORE_PURGE TOOLHEAD={toolhead}
	G0 E{purge_after_load} F100														# Purge
	_LOAD_FILAMENT_AFTER_PURGE TOOLHEAD={toolhead}
	M400																									# Wait for purge to complete
	RATOS_ECHO MSG="Filament loaded into nozzle!"


[gcode_macro _LOAD_FILAMENT_BEFORE_PURGE]
gcode:
	# parameter
	{% set toolhead = params.TOOLHEAD|int %}


[gcode_macro _LOAD_FILAMENT_AFTER_PURGE]
gcode:
	# parameter
	{% set toolhead = params.TOOLHEAD|int %}
