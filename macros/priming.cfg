[gcode_macro SAVE_PROBE_RESULT]
gcode:
	{% set last_z_offset = 9999.9 %}
	{% if printer.configfile.settings.beacon is defined %}
		{% set current_z = printer.toolhead.position.z|float %}
		{% set last_z_offset = printer.beacon.last_sample.dist - current_z %}
	{% elif printer.configfile.settings.bltouch is defined  %}
		{% set config_offset = printer.configfile.settings.bltouch.z_offset|float %}
		{% set last_z_offset = printer.probe.last_z_result - config_offset %}
	{% elif printer.configfile.settings.bltouch is defined  %}
		{% set config_offset = printer.configfile.settings.probe.z_offset|float %}
		{% set last_z_offset = printer.probe.last_z_result - config_offset %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE={params.VARIABLE|default('last_z_offset')} VALUE={last_z_offset}

[gcode_macro PROBE_FOR_PRIMING]
gcode:
	{% if printer["gcode_macro RatOS"].nozzle_priming|lower != 'false' %}
		SAVE_GCODE_STATE NAME=probe_for_priming_state
		RESPOND MSG="Probing the prime location.."
		CACHE_TOOLHEAD_SETTINGS
		SET_MACRO_TRAVEL_SETTINGS
		{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
		{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
			{% set x_start = 5 %}
		{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
			{% set x_start = printer["gcode_macro RatOS"].printable_x_max - 5 %}
		{% else %}
			{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
		{% endif %}
		{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
			{% set y_start = 5 %}
		{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
			{% set y_start = printer["gcode_macro RatOS"].printable_y_max - 5 %}
		{% else %}
			{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
		{% endif %}
		{% set z = printer.configfile.settings.bed_mesh.horizontal_move_z|float %}
		# get bed mesh config object
		{% set mesh_config = printer.configfile.config.bed_mesh %}

		# Get probe offsets
		{% if printer.configfile.settings.bltouch is defined %}
			{% set x_offset = printer.configfile.settings.bltouch.x_offset|float %}
			{% set y_offset = printer.configfile.settings.bltouch.y_offset|float %}
		{% elif printer.configfile.settings.probe is defined %}
			{% set x_offset = printer.configfile.settings.probe.x_offset|float %}
			{% set y_offset = printer.configfile.settings.probe.y_offset|float %}
		{% elif printer.configfile.settings.beacon is defined %}
			{% set x_offset = printer.configfile.settings.beacon.x_offset|float %}
			{% set y_offset = printer.configfile.settings.beacon.y_offset|float %}
		{% else %}
			{ action_raise_error("No probe, bltouch or beacon section found. Adaptive priming only works with [probe], [beacon] and [bltouch].") }
		{% endif %}

		# get configured bed mesh area
		{% set min_x = mesh_config.mesh_min.split(",")[0]|float - x_offset %}
		{% set min_y = mesh_config.mesh_min.split(",")[1]|float - y_offset %}
		{% set max_x = mesh_config.mesh_max.split(",")[0]|float - x_offset %}
		{% set max_y = mesh_config.mesh_max.split(",")[1]|float - y_offset %}

		# make sure probe coordinates lie within the configured mesh area
		{% set x_start = [[x_start, max_x]|min, min_x]|max %}
		{% set y_start = [[y_start, max_y]|min, min_y]|max %}

		RESPOND MSG="PROBE_FOR_PRIMING: Probing the prime location at X: {x_start} Y: {y_start}"
		# Absolute positioning
		G90 
		# Relative extrusion
		M83
		
		# Lift to horizontal_move_z
		G0 Z{z} F{z_speed}
		# move close to blob position
		G1 X{x_start} Y{y_start} F{speed}
		PROBE_CURRENT_POSITION
		SAVE_PROBE_RESULT VARIABLE=probe_for_priming_result
		{% set x_end = x_start %}
		{% set y_end = y_start + 45 %}
		G1 X{x_end} Y{y_end} F{speed}
		# Restore old settings
		PROBE_CURRENT_POSITION
		SAVE_PROBE_RESULT VARIABLE=probe_for_priming_end_result

		RESTORE_TOOLHEAD_SETTINGS
		RESTORE_GCODE_STATE NAME=probe_for_priming_state
	{% endif %}

[gcode_macro RESET_PRIME_PROBE_STATE]
gcode:
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_result VALUE=None
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=probe_for_priming_end_result VALUE=None

[gcode_macro PROBE_CURRENT_POSITION]
gcode:
	SAVE_GCODE_STATE NAME=probe_current_position_state
	{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
		ASSERT_PROBE_DEPLOYED
	{% endif %}
	PROBE
	{% if printer.configfile.settings.beacon is defined %}
		BEACON_QUERY
	{% else %}
		# Only restore state if we're not using a beacon, so we state at scanning height
		RESTORE_GCODE_STATE NAME=probe_current_position_state MOVE=1 MOVE_SPEED={printer["gcode_macro RatOS"].macro_z_speed|float}
	{% endif %}

[gcode_macro PRIME_LINE]
description: Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode:
	RESPOND MSG="Prime line has been discontinued, switching to prime blob.."
	PRIME_BLOB

[gcode_macro PRIME_BLOB]
description: Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode:
	SAVE_GCODE_STATE NAME=prime_blob_state
	M117 Priming nozzle with prime blob..
	RESPOND MSG="Priming nozzle with prime blob.."
	CACHE_TOOLHEAD_SETTINGS
	SET_MACRO_TRAVEL_SETTINGS
	{% set bed_margin_x = printer["gcode_macro RatOS"].bed_margin_x %}
	{% set bed_margin_y = printer["gcode_macro RatOS"].bed_margin_y %}
	{% set has_start_offset = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) != 9999.9 %}
	{% set has_end_offset = printer["gcode_macro RatOS"].probe_for_priming_end_result|float(9999.9) != 9999.9 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set fan_speed = printer["gcode_macro RatOS"].nozzle_prime_bridge_fan|float %}
	{% set nozzle_diameter = printer.configfile.settings.extruder.nozzle_diameter|float %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
		{% set x_start = 5 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
		{% set x_start = printer["gcode_macro RatOS"].printable_x_max - 5 %}
	{% else %}
		{% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
		{% set y_start = 5 %}
		{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
		{% set y_start = printer["gcode_macro RatOS"].printable_y_max - 5 %}
		{% set y_factor = -1 %}
	{% else %}
		{% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
		{% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer["gcode_macro RatOS"].printable_y_max / 2 %}
			{% set y_factor = 1 %}
		{% else %}
			{% set y_factor = -1 %}
		{% endif %}
	{% endif %}
	{% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
		{% set y_factor = 1 %}
	{% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
		{% set y_factor = -1 %}
	{% endif %}
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	
	{% set start_z_offset = 0 %}
	{% set end_z_offset = 0 %}
	{% if has_start_offset %}
		{% set start_z_probe_result = printer["gcode_macro RatOS"].probe_for_priming_result|float(9999.9) %}
		{% set end_z_probe_result = printer["gcode_macro RatOS"].probe_for_priming_end_result|float(9999.9) %}
		{% if printer.configfile.settings.bltouch is not defined and printer.configfile.settings.probe is not defined and printer.configfile.settings.beacon is not defined %}
			{ action_raise_error("No probe or bltouch section found. Adaptive priming only works with [probe] or [bltouch].") }
		{% endif %}
		{% if start_z_probe_result == 9999.9 %}
			{ action_raise_error("No start probe result found for prime area. This is likely a bug.") }
		{% endif %}
		{% if end_z_probe_result == 9999.9 %}
			{ action_raise_error("No end probe result found for prime area. This is likely a bug.") }
		{% endif %}
		{% set adjustment_threshold = printer["gcode_macro RatOS"].adaptive_prime_offset_threshold|float %}
		{% if start_z_probe_result < adjustment_threshold %}
			{ action_raise_error("Abnormal probe offset detected. Needed offset of {start_adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
		{% endif %}
		{% if end_z_probe_result < adjustment_threshold %}
			{ action_raise_error("Abnormal probe offset detected. Needed offset of {end_adjustment} is below the offset threshold of -1mm. Please verify the probe is over the bed when probing for priming. If it isn't, you should adjust you min/max bed_mesh settings so the probe is always over the print area.") }
		{% endif %}
		{% set start_z_offset = start_z_probe_result %}
		{% set end_z_offset = end_z_probe_result %}
	{% endif %}
	# Absolute positioning
	G90
	# Relative extrusion
	M83
	# Lift to start print Z height
	G0 Z{z} F{z_speed}
	# move close to blob position along the edge of the bed
	G1 X{x_start} F{speed}
	G1 Y{y_start + (15 * y_factor)} F{speed}
	# Lower to blob extrusion height
	G1 Z{0.5 + start_z_offset} F{z_speed}
	# Move to final position horizontally
	G1 Y{y_start} F{speed}
	# Extrude a blob (split in two moves to avoid thresholds)
	G1 F300 E{10 / ((0.4 / nozzle_diameter) ** 2)}
	G1 F300 E{10 / ((0.4 / nozzle_diameter) ** 2)}
	# 40% fan
	M106 S{fan_speed} 
	# Move the extruder up by 5mm while extruding, breaks away from blob
	G1 Z5 F100 E5  
	# Move to wipe position, but keep extruding so the wipe is attached to blob
	G1 F3000 Y{y_start + (15 * y_factor)} E{1 / ((0.4 / nozzle_diameter) ** 2)} 
	# Go down diagonally while extruding
	# Broken down in z moves under 2mm as a workaround for a tuning tower test.
	# The tuning tower command thinks a new print has been started when z moves over 2mm and aborts.
	G1 F3000 Y{y_start + (20 * y_factor)} Z{3.8 + end_z_offset} E{0.2 / ((0.4 / nozzle_diameter) ** 2)}
	G1 F3000 Y{y_start + (34 * y_factor)} Z{2.6 + end_z_offset} E{0.2 / ((0.4 / nozzle_diameter) ** 2)}
	G1 F3000 Y{y_start + (38 * y_factor)} Z{1.4 + end_z_offset} E{0.2 / ((0.4 / nozzle_diameter) ** 2)}
	G1 F3000 Y{y_start + (42 * y_factor)} Z{0.2 + end_z_offset} E{0.2 / ((0.4 / nozzle_diameter) ** 2)}
	# 0% fan
	M106 S0
	# small wipe line
	G1 F3000 Y{y_start + (46 * y_factor)} Z{0.2 + end_z_offset} E0.6 
	# Break away wipe
	G1 F{speed} Y{y_start + (50 * y_factor)}
	RESTORE_TOOLHEAD_SETTINGS
	RESTORE_GCODE_STATE NAME=prime_blob_state
