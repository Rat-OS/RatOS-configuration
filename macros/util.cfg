#####
# CONFIGURATION VARIABLES
#####

[gcode_macro ECHO_RATOS_VARS]
description: Echo RatOS variables to the console.
gcode:
	{% for var, value in printer["gcode_macro RatOS"].items() %}
		{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}
	
[gcode_macro RatOS]
description: RatOS variable storage macro, will echo variables to the console when run.
# Configuration defaults
# Configuration should exclusively happen in printer.cfg.
variable_relative_extrusion: False
variable_force_absolute_position: False
variable_preheat_extruder: True
variable_preheat_extruder_temp: 150
variable_calibrate_bed_mesh: True
variable_nozzle_priming: "primeblob"
variable_nozzle_prime_start_x: "max" # min, max or number
variable_nozzle_prime_start_y: "min" # min, max or number
variable_nozzle_prime_direction: "auto" # auto, forwards, backwards
variable_nozzle_prime_bridge_fan: 102
variable_filament_unload_length: 130
variable_filament_unload_speed: 5
variable_filament_load_length: 100
variable_filament_load_speed: 10
variable_start_print_park_in: "back"
variable_start_print_park_z_height: 50
variable_start_print_heat_chamber_bed_temp: 115
variable_end_print_park_in: "back"
variable_pause_print_park_in: "back"
variable_macro_travel_speed: 150
variable_macro_travel_accel: 2000
variable_macro_z_speed: 15
variable_end_print_park_z_hop: 20
# Possible values: 'sensorless' or 'endstops'.
variable_homing: "endstops"
variable_sensorless_x_current: 0.6
variable_sensorless_y_current: 0.9
# Possible values: 'static' or 'stowable'
variable_z_probe: "static"
# Possible Values: 'middle' or an absolute x coordinate
variable_safe_home_x: "middle"
# Possible Values: 'middle' or an absolute y coordinate
variable_safe_home_y: "middle"
variable_stowable_probe_stop_on_error: False
variable_driver_type_x: "tmc2209"
variable_driver_type_y: "tmc2209"
variable_adaptive_mesh: False
variable_probe_for_priming_result: None
variable_probe_for_priming_end_result: None
variable_adaptive_prime_offset_threshold: -1.0
variable_bed_margin_x: [0, 0]
variable_bed_margin_y: [0, 0]
variable_printable_x_min: 0
variable_printable_x_max: 0
variable_printable_y_min: 0
variable_printable_y_max: 0
gcode:
	ECHO_RATOS_VARS

[delayed_gcode RATOS_INIT]
initial_duration: 0.1
gcode:
	{% set bed_margin_x = printer["gcode_macro RatOS"].bed_margin_x %}
	{% set bed_margin_y = printer["gcode_macro RatOS"].bed_margin_y %}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=printable_x_max VALUE={printer.toolhead.axis_maximum.x - bed_margin_x[1]}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=printable_y_max VALUE={printer.toolhead.axis_maximum.y - bed_margin_y[1]}

[gcode_macro CACHE_TOOLHEAD_SETTINGS]
variable_old_accel: 1000
variable_old_decel: 500
variable_old_speed: 50
gcode:
	SET_GCODE_VARIABLE MACRO=CACHE_TOOLHEAD_SETTINGS VARIABLE=old_accel VALUE={{ printer.toolhead.max_accel }}
	SET_GCODE_VARIABLE MACRO=CACHE_TOOLHEAD_SETTINGS VARIABLE=old_decel VALUE={{ printer.toolhead.max_accel_to_decel }}
	SET_GCODE_VARIABLE MACRO=CACHE_TOOLHEAD_SETTINGS VARIABLE=old_speed VALUE={{ printer.toolhead.max_velocity }}

[gcode_macro SET_MACRO_TRAVEL_SETTINGS]
gcode:
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set accel = printer["gcode_macro RatOS"].macro_travel_accel %}
	SET_VELOCITY_LIMIT ACCEL={accel} ACCEL_TO_DECEL={accel/2} VELOCITY={speed}

[gcode_macro RESTORE_TOOLHEAD_SETTINGS]
gcode:
	{% set old_accel = printer["gcode_macro RatOS"].old_accel %}
	{% set old_decel = printer["gcode_macro RatOS"].old_decel %}
	{% set old_speed = printer["gcode_macro RatOS"].old_speed %}
	SET_VELOCITY_LIMIT ACCEL={old_accel} ACCEL_TO_DECEL={old_decel} VELOCITY={old_speed}
	
[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description: FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode:
	RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
	SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
	SET_KINEMATIC_POSITION X={printer["gcode_macro RatOS"].printable_x_max / 2} Y={printer["gcode_macro RatOS"].printable_y_max / 2} Z={printer.toolhead.axis_maximum.z / 2}
